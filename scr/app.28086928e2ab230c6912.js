"use strict";(self.webpackChunktolo_game_dev=self.webpackChunktolo_game_dev||[]).push([[143],{6164:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"canvas {\n    width: 512px;\n    height: 512px;\n    box-shadow: 0 4px 8px #0009;\n    background-color: #543;\n    margin: 1em;\n}\n\npre {\n    white-space: pre-wrap;\n    max-width: 90vw;\n}\n\nli {\n    list-style: none;\n}\n\na {\n    text-decoration: none;\n    height: fit-content;\n    width: fit-content;\n    margin: 10px;\n}\n\na:hover {\n    opacity: 1;\n    text-decoration: none;\n}\n\n.Hello {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 20px 0;\n}\n","",{version:3,sources:["webpack://./src/app/app.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,aAAa;IACb,2BAA2B;IAC3B,sBAAsB;IACtB,WAAW;AACf;;AAEA;IACI,qBAAqB;IACrB,eAAe;AACnB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,qBAAqB;IACrB,mBAAmB;IACnB,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,UAAU;IACV,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,cAAc;AAClB",sourcesContent:["canvas {\n    width: 512px;\n    height: 512px;\n    box-shadow: 0 4px 8px #0009;\n    background-color: #543;\n    margin: 1em;\n}\n\npre {\n    white-space: pre-wrap;\n    max-width: 90vw;\n}\n\nli {\n    list-style: none;\n}\n\na {\n    text-decoration: none;\n    height: fit-content;\n    width: fit-content;\n    margin: 10px;\n}\n\na:hover {\n    opacity: 1;\n    text-decoration: none;\n}\n\n.Hello {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 20px 0;\n}\n"],sourceRoot:""}]);const l=a},3788:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,":root {\n    --background: linear-gradient(\n        200.96deg,\n        hsl(30, 99%, 58%) -5%,\n        hsl(210, 66%, 60%) 52%,\n        hsl(240, 56%, 40%) 120%\n    );\n}\n\nbody {\n    position: relative;\n    color: white;\n    height: 100vh;\n    background: var(--background);\n    font-family: sans-serif;\n    overflow-y: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\nfieldset {\n    display: inline-block;\n    border: 1px solid var(--theme-color-on-screen-opacity-50);\n    border-radius: 1em;\n}\n\nfieldset > legend {\n    all: unset;\n    background: transparent;\n    padding: 0;\n}\n\nfieldset > legend > div.custom {\n    margin: 0;\n}\n\nbody > div#app {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n}\n\nheader {\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n    padding: 0 0.5em;\n    box-shadow: var(--theme-shadow-header);\n    flex: 0 0 auto;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    min-height: 3rem;\n}\n\nheader * {\n    margin-top: 0;\n    margin-bottom: 0;\n}\n\np {\n    font-size: 80%;\n    background-color: var(--theme-color-screen);\n    color: var(--theme-color-on-screen-opacity-50);\n    border-left: 0.5em solid var(--theme-color-accent-dark);\n    margin: 0.5em;\n    padding: 0.5em 1em;\n}\n","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;IACI;;;;;KAKC;AACL;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,6BAA6B;IAC7B,uBAAuB;IACvB,kBAAkB;IAClB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,qBAAqB;IACrB,yDAAyD;IACzD,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,uBAAuB;IACvB,UAAU;AACd;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,iDAAiD;IACjD,yCAAyC;IACzC,gBAAgB;IAChB,sCAAsC;IACtC,cAAc;IACd,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,cAAc;IACd,2CAA2C;IAC3C,8CAA8C;IAC9C,uDAAuD;IACvD,aAAa;IACb,kBAAkB;AACtB",sourcesContent:[":root {\n    --background: linear-gradient(\n        200.96deg,\n        hsl(30, 99%, 58%) -5%,\n        hsl(210, 66%, 60%) 52%,\n        hsl(240, 56%, 40%) 120%\n    );\n}\n\nbody {\n    position: relative;\n    color: white;\n    height: 100vh;\n    background: var(--background);\n    font-family: sans-serif;\n    overflow-y: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\nfieldset {\n    display: inline-block;\n    border: 1px solid var(--theme-color-on-screen-opacity-50);\n    border-radius: 1em;\n}\n\nfieldset > legend {\n    all: unset;\n    background: transparent;\n    padding: 0;\n}\n\nfieldset > legend > div.custom {\n    margin: 0;\n}\n\nbody > div#app {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n}\n\nheader {\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n    padding: 0 0.5em;\n    box-shadow: var(--theme-shadow-header);\n    flex: 0 0 auto;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    min-height: 3rem;\n}\n\nheader * {\n    margin-top: 0;\n    margin-bottom: 0;\n}\n\np {\n    font-size: 80%;\n    background-color: var(--theme-color-screen);\n    color: var(--theme-color-on-screen-opacity-50);\n    border-left: 0.5em solid var(--theme-color-accent-dark);\n    margin: 0.5em;\n    padding: 0.5em 1em;\n}\n"],sourceRoot:""}]);const l=a},191:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"div.ui-Modal {\n    --transition-duration: 0.3s;\n    --padding: 1rem;\n    --background-color: var(--theme-color-screen-opacity-50);\n\n    z-index: 9999999;\n    position: fixed;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: var(--padding);\n    overflow: hidden;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    transition: background-color var(--transition-duration);\n    background-color: transparent;\n    box-sizing: border-box;\n}\n\ndiv.ui-Modal.align-left {\n    justify-content: flex-start;\n}\n\ndiv.ui-Modal.align-right {\n    justify-content: flex-end;\n}\n\ndiv.ui-Modal.align-top {\n    align-items: flex-start;\n}\n\ndiv.ui-Modal.align-bottom {\n    align-items: flex-end;\n}\n\ndiv.ui-Modal.show {\n    transition: background-color var(--transition-duration);\n    background-color: var(--background-color);\n}\n\ndiv.ui-Modal > div {\n    transform: scale(0);\n    opacity: 0;\n    transition: all var(--transition-duration);\n    max-width: 100vw;\n    max-height: 100vh;\n}\n\ndiv.ui-Modal.show > div {\n    transform: scale(1);\n    opacity: 1;\n    transition: all var(--transition-duration);\n}\n\ndiv.ui-Modal-error {\n    margin: 0;\n    padding: 1rem;\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n    max-width: 320px;\n    overflow-x: auto;\n}\n\ndiv.ui-Modal-error pre {\n    white-space: pre-wrap;\n}\n\n.ui-Modal-promise-waiter {\n    padding: 1rem;\n    background-color: var(--theme-color-frame-opacity-90);\n    color: var(--theme-color-on-frame);\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    max-width: 300px;\n}\n\n.ui-Modal-promise-waiter > * {\n    flex: 1 1 auto;\n}\n\n.ui-Modal-promise-waiter > svg {\n    flex: 0 0 2rem;\n    animation: ui-Modal-anim 1s linear infinite;\n}\n\n@keyframes ui-Modal-anim {\n  0% {\n    transform: rotate(0deg); }\n  100% {\n    transform: rotate(-360deg); } \n}\n","",{version:3,sources:["webpack://./src/ui/modal/modal.css"],names:[],mappings:"AAAA;IACI,2BAA2B;IAC3B,eAAe;IACf,wDAAwD;;IAExD,gBAAgB;IAChB,eAAe;IACf,OAAO;IACP,MAAM;IACN,QAAQ;IACR,SAAS;IACT,WAAW;IACX,YAAY;IACZ,SAAS;IACT,uBAAuB;IACvB,gBAAgB;IAChB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,uDAAuD;IACvD,6BAA6B;IAC7B,sBAAsB;AAC1B;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,uDAAuD;IACvD,yCAAyC;AAC7C;;AAEA;IACI,mBAAmB;IACnB,UAAU;IACV,0CAA0C;IAC1C,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;IACnB,UAAU;IACV,0CAA0C;AAC9C;;AAEA;IACI,SAAS;IACT,aAAa;IACb,0CAA0C;IAC1C,kCAAkC;IAClC,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,qDAAqD;IACrD,kCAAkC;IAClC,oBAAoB;IACpB,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,2CAA2C;AAC/C;;AAEA;EACE;IACE,uBAAuB,EAAE;EAC3B;IACE,0BAA0B,EAAE;AAChC",sourcesContent:["div.ui-Modal {\n    --transition-duration: 0.3s;\n    --padding: 1rem;\n    --background-color: var(--theme-color-screen-opacity-50);\n\n    z-index: 9999999;\n    position: fixed;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: var(--padding);\n    overflow: hidden;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    transition: background-color var(--transition-duration);\n    background-color: transparent;\n    box-sizing: border-box;\n}\n\ndiv.ui-Modal.align-left {\n    justify-content: flex-start;\n}\n\ndiv.ui-Modal.align-right {\n    justify-content: flex-end;\n}\n\ndiv.ui-Modal.align-top {\n    align-items: flex-start;\n}\n\ndiv.ui-Modal.align-bottom {\n    align-items: flex-end;\n}\n\ndiv.ui-Modal.show {\n    transition: background-color var(--transition-duration);\n    background-color: var(--background-color);\n}\n\ndiv.ui-Modal > div {\n    transform: scale(0);\n    opacity: 0;\n    transition: all var(--transition-duration);\n    max-width: 100vw;\n    max-height: 100vh;\n}\n\ndiv.ui-Modal.show > div {\n    transform: scale(1);\n    opacity: 1;\n    transition: all var(--transition-duration);\n}\n\ndiv.ui-Modal-error {\n    margin: 0;\n    padding: 1rem;\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n    max-width: 320px;\n    overflow-x: auto;\n}\n\ndiv.ui-Modal-error pre {\n    white-space: pre-wrap;\n}\n\n.ui-Modal-promise-waiter {\n    padding: 1rem;\n    background-color: var(--theme-color-frame-opacity-90);\n    color: var(--theme-color-on-frame);\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    max-width: 300px;\n}\n\n.ui-Modal-promise-waiter > * {\n    flex: 1 1 auto;\n}\n\n.ui-Modal-promise-waiter > svg {\n    flex: 0 0 2rem;\n    animation: ui-Modal-anim 1s linear infinite;\n}\n\n@keyframes ui-Modal-anim {\n  0% {\n    transform: rotate(0deg); }\n  100% {\n    transform: rotate(-360deg); } \n}\n"],sourceRoot:""}]);const l=a},9722:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,'/***************/\n/** RESET CSS **/\n/***************/\n\n/* Box sizing rules */\n*,\n*::before,\n*::after {\n    box-sizing: border-box;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nfigure,\nblockquote,\ndl,\ndd {\n    margin: 0;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role="list"],\nol[role="list"] {\n    list-style: none;\n}\n\n/* Set core root defaults */\nhtml:focus-within {\n    scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n    min-height: 100vh;\n    text-rendering: optimizeSpeed;\n    line-height: 1.5;\n}\n\n/* A elements that don\'t have a class get default styles */\na:not([class]) {\n    text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n    max-width: 100%;\n    display: block;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n    font: inherit;\n}\n\n/* Remove all animations, transitions and smooth scroll for\n   people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n    html:focus-within {\n        scroll-behavior: auto;\n    }\n\n    *,\n    *::before,\n    *::after {\n        animation-duration: 0.01ms !important;\n        animation-iteration-count: 1 !important;\n        transition-duration: 0.01ms !important;\n        scroll-behavior: auto !important;\n    }\n}\n\n/*********/\n/* Theme */\n/*********/\n\nhtml {\n    font-family: sans-serif;\n    font-size: 16px;\n}\n\n/* Focus */\n* {\n    -webkit-tap-highlight-color: transparent;\n    accent-color: var(--theme-color-accent);\n}\n*::-moz-focus-inner {\n    border: 0;\n}\n*:focus {\n    outline: 2px dotted var(--theme-color-accent);\n    outline-offset: 2px;\n    z-index: 999999;\n}\n\nh1,\nh2 {\n    border: 0.0625em solid currentColor;\n    border-image: linear-gradient(to right, currentColor, transparent) 0 0 1 0;\n    margin: 0.5rem 0 1rem 0;\n}\n\nh1 {\n    font-size: 1.2rem;\n}\n\nh2 {\n    font-size: 1.1rem;\n}\n\nhr {\n    border: none;\n    height: 1px;\n    width: 100%;\n    margin: 1rem 0;\n    background-image: linear-gradient(\n        to left,\n        transparent,\n        currentColor,\n        currentColor,\n        transparent\n    );\n}\n\n.theme-header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 2rem;\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n    padding: 0;\n    z-index: 1;\n}\n\n.theme-header > * {\n    flex: 1 1 auto;\n    margin: 0 0.5rem;\n}\n\n.theme-header > div {\n    text-align: center;\n}\n\n.theme-header > div:first-child {\n    text-align: left;\n}\n\n.theme-header > svg,\n.theme-header > img {\n    height: 1.5rem;\n    flex: 0 0 auto;\n}\n\nprogress[value] {\n    box-sizing: border-box;\n    margin: 1rem 0;\n    appearance: none;\n    border: none;\n    height: 0.5rem;\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(var(--theme-color-screen), var(--theme-color-screen));\n    border-radius: 0.5rem;\n    box-shadow: 0 0.125rem 0.25rem #0007 inset, 0 -0.125rem 0.25rem #fff7 inset;\n    position: relative;\n    overflow: hidden;\n}\n\nprogress[value]::-webkit-progress-bar {\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(var(--theme-color-screen), var(--theme-color-screen));\n    border-radius: 0.5rem;\n    box-shadow: 0 0.125rem 0.25rem #0007 inset, 0 -0.125rem 0.25rem #fff7 inset;\n}\n\nprogress[value]::-webkit-progress-value {\n    background-size: 100% 100%, 1.5rem 1rem, 100% 100%;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 0.5rem var(--theme-color-primary);\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(\n            135deg,\n            transparent,\n            transparent 33%,\n            #0002 33%,\n            #0002 66%,\n            transparent 66%\n        ),\n        linear-gradient(\n            to top,\n            var(--theme-color-primary-light),\n            var(--theme-color-primary-dark)\n        );\n}\n\nprogress[value]::-moz-progress-bar {\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(\n            135deg,\n            transparent,\n            transparent 33%,\n            #0002 33%,\n            #0002 66%,\n            transparent 66%\n        ),\n        linear-gradient(\n            to top,\n            var(--theme-color-primary-light),\n            var(--theme-color-primary-dark)\n        );\n    background-size: 100% 100%, 1.5rem 1rem, 100% 100%;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 0.5rem var(--theme-color-primary);\n}\n\nfieldset {\n    margin: 1rem 0;\n    background: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n    border: 1px solid var(--theme-color-on-section-opacity-30);\n}\n\nfieldset > legend {\n    background: var(--theme-color-section);\n    color: var(--theme-color-on-section-opacity-50);\n    border: 1px solid var(--theme-color-on-section-opacity-30);\n    font-size: 80%;\n    padding: 0.25em 1em;\n    border-radius: 100vw;\n}\n\n.theme-flashing-text {\n    animation: theme-flashing-text-anim 1s infinite;\n}\n\n@keyframes theme-flashing-text-anim {\n    0% {\n        text-shadow: 0 0 0.2em transparent;\n    }\n    50% {\n        text-shadow: 0 0 0.2em var(--theme-color-accent);\n    }\n    100% {\n        text-shadow: 0 0 0.2em transparent;\n    }\n}\n\n*:focus {\n    outline: 3px dotted var(--theme-color-accent);\n    outline-offset: 2px;\n}\n*:focus:not(:focus-visible) {\n    outline: none;\n}\n\n.theme-color-primary {\n    background-color: var(--theme-color-primary);\n    color: var(--theme-color-on-primary);\n}\n.theme-color-primary-dark {\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n}\n.theme-color-primary-light {\n    background-color: var(--theme-color-primary-light);\n    color: var(--theme-color-on-primary-light);\n}\n.theme-color-accent {\n    background-color: var(--theme-color-accent);\n    color: var(--theme-color-on-accent);\n}\n.theme-color-accent-dark {\n    background-color: var(--theme-color-accent-dark);\n    color: var(--theme-color-on-accent-dark);\n}\n.theme-color-accent-light {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n.theme-color-screen {\n    background-color: var(--theme-color-screen);\n    color: var(--theme-color-on-screen);\n}\n.theme-color-frame {\n    background-color: var(--theme-color-frame);\n    color: var(--theme-color-on-frame);\n}\n.theme-color-section {\n    background-color: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n}\n.theme-color-input {\n    background-color: var(--theme-color-input);\n    color: var(--theme-color-on-input);\n}\n.theme-color-error {\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n}\n\n.theme-shadow-card {\n    box-shadow: var(--theme-shadow-card);\n}\n.theme-shadow-button {\n    box-shadow: var(--theme-shadow-button);\n}\n.theme-shadow-header {\n    box-shadow: var(--theme-shadow-header);\n}\n.theme-shadow-button-pressed {\n    box-shadow: var(--theme-shadow-button-pressed);\n}\n.theme-shadow-dialog {\n    box-shadow: var(--theme-shadow-dialog);\n}\n\na,\na:visited {\n    color: var(--theme-color-accent);\n}\n\n.view {\n    margin: 0.125em;\n}\n',"",{version:3,sources:["webpack://./src/ui/theme/theme.css"],names:[],mappings:"AAAA,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;;AAEhB,qBAAqB;AACrB;;;IAGI,sBAAsB;AAC1B;;AAEA,0BAA0B;AAC1B;;;;;;;;;;IAUI,SAAS;AACb;;AAEA,2GAA2G;AAC3G;;IAEI,gBAAgB;AACpB;;AAEA,2BAA2B;AAC3B;IACI,uBAAuB;AAC3B;;AAEA,2BAA2B;AAC3B;IACI,iBAAiB;IACjB,6BAA6B;IAC7B,gBAAgB;AACpB;;AAEA,0DAA0D;AAC1D;IACI,8BAA8B;AAClC;;AAEA,oCAAoC;AACpC;;IAEI,eAAe;IACf,cAAc;AAClB;;AAEA,yCAAyC;AACzC;;;;IAII,aAAa;AACjB;;AAEA;uCACuC;AACvC;IACI;QACI,qBAAqB;IACzB;;IAEA;;;QAGI,qCAAqC;QACrC,uCAAuC;QACvC,sCAAsC;QACtC,gCAAgC;IACpC;AACJ;;AAEA,UAAU;AACV,UAAU;AACV,UAAU;;AAEV;IACI,uBAAuB;IACvB,eAAe;AACnB;;AAEA,UAAU;AACV;IACI,wCAAwC;IACxC,uCAAuC;AAC3C;AACA;IACI,SAAS;AACb;AACA;IACI,6CAA6C;IAC7C,mBAAmB;IACnB,eAAe;AACnB;;AAEA;;IAEI,mCAAmC;IACnC,0EAA0E;IAC1E,uBAAuB;AAC3B;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,WAAW;IACX,cAAc;IACd;;;;;;KAMC;AACL;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,YAAY;IACZ,iDAAiD;IACjD,yCAAyC;IACzC,UAAU;IACV,UAAU;AACd;;AAEA;IACI,cAAc;IACd,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;;IAEI,cAAc;IACd,cAAc;AAClB;;AAEA;IACI,sBAAsB;IACtB,cAAc;IACd,gBAAgB;IAChB,YAAY;IACZ,cAAc;IACd;;;;;;;6EAOyE;IACzE,qBAAqB;IACrB,2EAA2E;IAC3E,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI;;;;;;;6EAOyE;IACzE,qBAAqB;IACrB,2EAA2E;AAC/E;;AAEA;IACI,kDAAkD;IAClD,qBAAqB;IACrB,iDAAiD;IACjD;;;;;;;;;;;;;;;;;;;SAmBK;AACT;;AAEA;IACI;;;;;;;;;;;;;;;;;;;SAmBK;IACL,kDAAkD;IAClD,qBAAqB;IACrB,iDAAiD;AACrD;;AAEA;IACI,cAAc;IACd,sCAAsC;IACtC,oCAAoC;IACpC,0DAA0D;AAC9D;;AAEA;IACI,sCAAsC;IACtC,+CAA+C;IAC/C,0DAA0D;IAC1D,cAAc;IACd,mBAAmB;IACnB,oBAAoB;AACxB;;AAEA;IACI,+CAA+C;AACnD;;AAEA;IACI;QACI,kCAAkC;IACtC;IACA;QACI,gDAAgD;IACpD;IACA;QACI,kCAAkC;IACtC;AACJ;;AAEA;IACI,6CAA6C;IAC7C,mBAAmB;AACvB;AACA;IACI,aAAa;AACjB;;AAEA;IACI,4CAA4C;IAC5C,oCAAoC;AACxC;AACA;IACI,iDAAiD;IACjD,yCAAyC;AAC7C;AACA;IACI,kDAAkD;IAClD,0CAA0C;AAC9C;AACA;IACI,2CAA2C;IAC3C,mCAAmC;AACvC;AACA;IACI,gDAAgD;IAChD,wCAAwC;AAC5C;AACA;IACI,iDAAiD;IACjD,yCAAyC;AAC7C;AACA;IACI,2CAA2C;IAC3C,mCAAmC;AACvC;AACA;IACI,0CAA0C;IAC1C,kCAAkC;AACtC;AACA;IACI,4CAA4C;IAC5C,oCAAoC;AACxC;AACA;IACI,0CAA0C;IAC1C,kCAAkC;AACtC;AACA;IACI,0CAA0C;IAC1C,kCAAkC;AACtC;;AAEA;IACI,oCAAoC;AACxC;AACA;IACI,sCAAsC;AAC1C;AACA;IACI,sCAAsC;AAC1C;AACA;IACI,8CAA8C;AAClD;AACA;IACI,sCAAsC;AAC1C;;AAEA;;IAEI,gCAAgC;AACpC;;AAEA;IACI,eAAe;AACnB",sourcesContent:['/***************/\n/** RESET CSS **/\n/***************/\n\n/* Box sizing rules */\n*,\n*::before,\n*::after {\n    box-sizing: border-box;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nfigure,\nblockquote,\ndl,\ndd {\n    margin: 0;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role="list"],\nol[role="list"] {\n    list-style: none;\n}\n\n/* Set core root defaults */\nhtml:focus-within {\n    scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n    min-height: 100vh;\n    text-rendering: optimizeSpeed;\n    line-height: 1.5;\n}\n\n/* A elements that don\'t have a class get default styles */\na:not([class]) {\n    text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n    max-width: 100%;\n    display: block;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n    font: inherit;\n}\n\n/* Remove all animations, transitions and smooth scroll for\n   people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n    html:focus-within {\n        scroll-behavior: auto;\n    }\n\n    *,\n    *::before,\n    *::after {\n        animation-duration: 0.01ms !important;\n        animation-iteration-count: 1 !important;\n        transition-duration: 0.01ms !important;\n        scroll-behavior: auto !important;\n    }\n}\n\n/*********/\n/* Theme */\n/*********/\n\nhtml {\n    font-family: sans-serif;\n    font-size: 16px;\n}\n\n/* Focus */\n* {\n    -webkit-tap-highlight-color: transparent;\n    accent-color: var(--theme-color-accent);\n}\n*::-moz-focus-inner {\n    border: 0;\n}\n*:focus {\n    outline: 2px dotted var(--theme-color-accent);\n    outline-offset: 2px;\n    z-index: 999999;\n}\n\nh1,\nh2 {\n    border: 0.0625em solid currentColor;\n    border-image: linear-gradient(to right, currentColor, transparent) 0 0 1 0;\n    margin: 0.5rem 0 1rem 0;\n}\n\nh1 {\n    font-size: 1.2rem;\n}\n\nh2 {\n    font-size: 1.1rem;\n}\n\nhr {\n    border: none;\n    height: 1px;\n    width: 100%;\n    margin: 1rem 0;\n    background-image: linear-gradient(\n        to left,\n        transparent,\n        currentColor,\n        currentColor,\n        transparent\n    );\n}\n\n.theme-header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 2rem;\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n    padding: 0;\n    z-index: 1;\n}\n\n.theme-header > * {\n    flex: 1 1 auto;\n    margin: 0 0.5rem;\n}\n\n.theme-header > div {\n    text-align: center;\n}\n\n.theme-header > div:first-child {\n    text-align: left;\n}\n\n.theme-header > svg,\n.theme-header > img {\n    height: 1.5rem;\n    flex: 0 0 auto;\n}\n\nprogress[value] {\n    box-sizing: border-box;\n    margin: 1rem 0;\n    appearance: none;\n    border: none;\n    height: 0.5rem;\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(var(--theme-color-screen), var(--theme-color-screen));\n    border-radius: 0.5rem;\n    box-shadow: 0 0.125rem 0.25rem #0007 inset, 0 -0.125rem 0.25rem #fff7 inset;\n    position: relative;\n    overflow: hidden;\n}\n\nprogress[value]::-webkit-progress-bar {\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(var(--theme-color-screen), var(--theme-color-screen));\n    border-radius: 0.5rem;\n    box-shadow: 0 0.125rem 0.25rem #0007 inset, 0 -0.125rem 0.25rem #fff7 inset;\n}\n\nprogress[value]::-webkit-progress-value {\n    background-size: 100% 100%, 1.5rem 1rem, 100% 100%;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 0.5rem var(--theme-color-primary);\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(\n            135deg,\n            transparent,\n            transparent 33%,\n            #0002 33%,\n            #0002 66%,\n            transparent 66%\n        ),\n        linear-gradient(\n            to top,\n            var(--theme-color-primary-light),\n            var(--theme-color-primary-dark)\n        );\n}\n\nprogress[value]::-moz-progress-bar {\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(\n            135deg,\n            transparent,\n            transparent 33%,\n            #0002 33%,\n            #0002 66%,\n            transparent 66%\n        ),\n        linear-gradient(\n            to top,\n            var(--theme-color-primary-light),\n            var(--theme-color-primary-dark)\n        );\n    background-size: 100% 100%, 1.5rem 1rem, 100% 100%;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 0.5rem var(--theme-color-primary);\n}\n\nfieldset {\n    margin: 1rem 0;\n    background: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n    border: 1px solid var(--theme-color-on-section-opacity-30);\n}\n\nfieldset > legend {\n    background: var(--theme-color-section);\n    color: var(--theme-color-on-section-opacity-50);\n    border: 1px solid var(--theme-color-on-section-opacity-30);\n    font-size: 80%;\n    padding: 0.25em 1em;\n    border-radius: 100vw;\n}\n\n.theme-flashing-text {\n    animation: theme-flashing-text-anim 1s infinite;\n}\n\n@keyframes theme-flashing-text-anim {\n    0% {\n        text-shadow: 0 0 0.2em transparent;\n    }\n    50% {\n        text-shadow: 0 0 0.2em var(--theme-color-accent);\n    }\n    100% {\n        text-shadow: 0 0 0.2em transparent;\n    }\n}\n\n*:focus {\n    outline: 3px dotted var(--theme-color-accent);\n    outline-offset: 2px;\n}\n*:focus:not(:focus-visible) {\n    outline: none;\n}\n\n.theme-color-primary {\n    background-color: var(--theme-color-primary);\n    color: var(--theme-color-on-primary);\n}\n.theme-color-primary-dark {\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n}\n.theme-color-primary-light {\n    background-color: var(--theme-color-primary-light);\n    color: var(--theme-color-on-primary-light);\n}\n.theme-color-accent {\n    background-color: var(--theme-color-accent);\n    color: var(--theme-color-on-accent);\n}\n.theme-color-accent-dark {\n    background-color: var(--theme-color-accent-dark);\n    color: var(--theme-color-on-accent-dark);\n}\n.theme-color-accent-light {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n.theme-color-screen {\n    background-color: var(--theme-color-screen);\n    color: var(--theme-color-on-screen);\n}\n.theme-color-frame {\n    background-color: var(--theme-color-frame);\n    color: var(--theme-color-on-frame);\n}\n.theme-color-section {\n    background-color: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n}\n.theme-color-input {\n    background-color: var(--theme-color-input);\n    color: var(--theme-color-on-input);\n}\n.theme-color-error {\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n}\n\n.theme-shadow-card {\n    box-shadow: var(--theme-shadow-card);\n}\n.theme-shadow-button {\n    box-shadow: var(--theme-shadow-button);\n}\n.theme-shadow-header {\n    box-shadow: var(--theme-shadow-header);\n}\n.theme-shadow-button-pressed {\n    box-shadow: var(--theme-shadow-button-pressed);\n}\n.theme-shadow-dialog {\n    box-shadow: var(--theme-shadow-dialog);\n}\n\na,\na:visited {\n    color: var(--theme-color-accent);\n}\n\n.view {\n    margin: 0.125em;\n}\n'],sourceRoot:""}]);const l=a},9909:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".ui-view-Icons {\n    display: inline-block;\n    width: 1em;\n    height: 1em;\n}\n","",{version:3,sources:["webpack://./src/ui/view/_common.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,UAAU;IACV,WAAW;AACf",sourcesContent:[".ui-view-Icons {\n    display: inline-block;\n    width: 1em;\n    height: 1em;\n}\n"],sourceRoot:""}]);const l=a},1963:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"div.ui-view-ButtonView {\n    position: relative;\n    margin: 0.5rem;\n}\n\ndiv.ui-view-ButtonView > button {\n    position: relative;\n    box-sizing: border-box;\n    font: inherit;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    border: none;\n    border-radius: 0.25rem;\n    font-variant: small-caps;\n    font-weight: bolder;\n    height: 2.25rem;\n    padding: 0 1rem;\n    cursor: pointer;\n    box-shadow: var(--theme-shadow-button);\n    transition: all 0.2s;\n    filter: brightness(100%);\n    line-height: 1;\n}\n\ndiv.ui-view-ButtonView.flat > button,\ndiv.ui-view-ButtonView.flat > button:hover {\n    background-color: transparent;\n    color: var(--theme-color-primary);\n    box-shadow: none;\n}\n\ndiv.ui-view-ButtonView.outline > button {\n    background-color: transparent;\n    color: var(--theme-color-primary);\n    box-shadow: 0 0 0 0.25rem currentcolor inset, var(--theme-shadow-button);\n}\n\ndiv.ui-view-ButtonView > button > svg {\n    height: 1.5rem;\n    margin: 0 1rem 0 0;\n}\ndiv.ui-view-ButtonView > button > div {\n    order: 1;\n}\ndiv.ui-view-ButtonView.flip > button > svg {\n    order: 2;\n    margin: 0 0 0 1rem;\n}\n\ndiv.ui-view-ButtonView.wide > button {\n    display: flex;\n    width: 100%;\n    margin: 0.5rem 0;\n}\n\ndiv.ui-view-ButtonView > button > * {\n    flex: 0 0 auto;\n}\n\ndiv.ui-view-ButtonView.disabled > button {\n    cursor: default;\n    pointer-events: none;\n    box-shadow: none;\n    opacity: 0.5;\n    filter: grayscale(100%);\n}\n\ndiv.ui-view-ButtonView > button:active {\n    box-shadow: var(--theme-shadow-button-pressed);\n    filter: brightness(150%);\n}\n\ndiv.ui-view-ButtonView.flat > button:active {\n    box-shadow: none;\n    filter: brightness(150%);\n}\n\ndiv.ui-view-ButtonView > button > div.label {\n    flex: 1 1 auto;\n    text-align: center;\n}\n\ndiv.ui-view-ButtonView > label.error {\n    position: absolute;\n    left: 0;\n    right: 0;\n    width: 100%;\n    opacity: 1;\n    transform: translateY(-100%);\n}\n","",{version:3,sources:["webpack://./src/ui/view/button/button-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,sBAAsB;IACtB,aAAa;IACb,oBAAoB;IACpB,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,YAAY;IACZ,sBAAsB;IACtB,wBAAwB;IACxB,mBAAmB;IACnB,eAAe;IACf,eAAe;IACf,eAAe;IACf,sCAAsC;IACtC,oBAAoB;IACpB,wBAAwB;IACxB,cAAc;AAClB;;AAEA;;IAEI,6BAA6B;IAC7B,iCAAiC;IACjC,gBAAgB;AACpB;;AAEA;IACI,6BAA6B;IAC7B,iCAAiC;IACjC,wEAAwE;AAC5E;;AAEA;IACI,cAAc;IACd,kBAAkB;AACtB;AACA;IACI,QAAQ;AACZ;AACA;IACI,QAAQ;IACR,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,eAAe;IACf,oBAAoB;IACpB,gBAAgB;IAChB,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;IACI,8CAA8C;IAC9C,wBAAwB;AAC5B;;AAEA;IACI,gBAAgB;IAChB,wBAAwB;AAC5B;;AAEA;IACI,cAAc;IACd,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,WAAW;IACX,UAAU;IACV,4BAA4B;AAChC",sourcesContent:["div.ui-view-ButtonView {\n    position: relative;\n    margin: 0.5rem;\n}\n\ndiv.ui-view-ButtonView > button {\n    position: relative;\n    box-sizing: border-box;\n    font: inherit;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    border: none;\n    border-radius: 0.25rem;\n    font-variant: small-caps;\n    font-weight: bolder;\n    height: 2.25rem;\n    padding: 0 1rem;\n    cursor: pointer;\n    box-shadow: var(--theme-shadow-button);\n    transition: all 0.2s;\n    filter: brightness(100%);\n    line-height: 1;\n}\n\ndiv.ui-view-ButtonView.flat > button,\ndiv.ui-view-ButtonView.flat > button:hover {\n    background-color: transparent;\n    color: var(--theme-color-primary);\n    box-shadow: none;\n}\n\ndiv.ui-view-ButtonView.outline > button {\n    background-color: transparent;\n    color: var(--theme-color-primary);\n    box-shadow: 0 0 0 0.25rem currentcolor inset, var(--theme-shadow-button);\n}\n\ndiv.ui-view-ButtonView > button > svg {\n    height: 1.5rem;\n    margin: 0 1rem 0 0;\n}\ndiv.ui-view-ButtonView > button > div {\n    order: 1;\n}\ndiv.ui-view-ButtonView.flip > button > svg {\n    order: 2;\n    margin: 0 0 0 1rem;\n}\n\ndiv.ui-view-ButtonView.wide > button {\n    display: flex;\n    width: 100%;\n    margin: 0.5rem 0;\n}\n\ndiv.ui-view-ButtonView > button > * {\n    flex: 0 0 auto;\n}\n\ndiv.ui-view-ButtonView.disabled > button {\n    cursor: default;\n    pointer-events: none;\n    box-shadow: none;\n    opacity: 0.5;\n    filter: grayscale(100%);\n}\n\ndiv.ui-view-ButtonView > button:active {\n    box-shadow: var(--theme-shadow-button-pressed);\n    filter: brightness(150%);\n}\n\ndiv.ui-view-ButtonView.flat > button:active {\n    box-shadow: none;\n    filter: brightness(150%);\n}\n\ndiv.ui-view-ButtonView > button > div.label {\n    flex: 1 1 auto;\n    text-align: center;\n}\n\ndiv.ui-view-ButtonView > label.error {\n    position: absolute;\n    left: 0;\n    right: 0;\n    width: 100%;\n    opacity: 1;\n    transform: translateY(-100%);\n}\n"],sourceRoot:""}]);const l=a},20:(e,n,t)=>{t.d(n,{Z:()=>f});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i),l=t(1667),u=t.n(l),c=new URL(t(7345),t.b),s=a()(o()),d=u()(c);s.push([e.id,".ui-view-DialogView {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    box-shadow: var(--theme-shadow-dialog);\n    min-width: 19rem;\n    max-width: 100vw;\n    max-height: 100vh;\n    overflow: hidden;\n}\n\n.ui-view-DialogView > div {\n    overflow: auto;\n    flex: 1 1 auto;\n    background-color: var(--theme-color-frame);\n    color: var(--theme-color-on-frame);\n    padding: 1rem;\n}\n\n.ui-view-DialogView > header,\n.ui-view-DialogView > footer {\n    flex: 0 0 auto;\n    box-shadow: var(--theme-shadow-header);\n    z-index: 1;\n}\n\n.ui-view-DialogView > header {\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 1rem;\n    height: 2rem;\n}\n\n.ui-view-DialogView > header > * {\n    flex: 0 0 auto;\n    margin-right: 1rem;\n}\n.ui-view-DialogView > header > div {\n    flex: 1 1 auto;\n    margin-right: 0;\n}\n\n.ui-view-DialogView > footer {\n    background-color: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n    padding: 1rem;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    background-image: url("+d+");\n    background-size: contain;\n    background-repeat: repeat-x;\n    background-position: center bottom;\n}\n\n.ui-view-DialogView > footer > * {\n    min-width: 7rem;\n}\n","",{version:3,sources:["webpack://./src/ui/view/dialog/dialog-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,oBAAoB;IACpB,sCAAsC;IACtC,gBAAgB;IAChB,gBAAgB;IAChB,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,cAAc;IACd,cAAc;IACd,0CAA0C;IAC1C,kCAAkC;IAClC,aAAa;AACjB;;AAEA;;IAEI,cAAc;IACd,sCAAsC;IACtC,UAAU;AACd;;AAEA;IACI,iDAAiD;IACjD,yCAAyC;IACzC,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,cAAc;IACd,kBAAkB;AACtB;AACA;IACI,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,4CAA4C;IAC5C,oCAAoC;IACpC,aAAa;IACb,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,mBAAmB;IACnB,yDAAyC;IACzC,wBAAwB;IACxB,2BAA2B;IAC3B,kCAAkC;AACtC;;AAEA;IACI,eAAe;AACnB",sourcesContent:[".ui-view-DialogView {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    box-shadow: var(--theme-shadow-dialog);\n    min-width: 19rem;\n    max-width: 100vw;\n    max-height: 100vh;\n    overflow: hidden;\n}\n\n.ui-view-DialogView > div {\n    overflow: auto;\n    flex: 1 1 auto;\n    background-color: var(--theme-color-frame);\n    color: var(--theme-color-on-frame);\n    padding: 1rem;\n}\n\n.ui-view-DialogView > header,\n.ui-view-DialogView > footer {\n    flex: 0 0 auto;\n    box-shadow: var(--theme-shadow-header);\n    z-index: 1;\n}\n\n.ui-view-DialogView > header {\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 1rem;\n    height: 2rem;\n}\n\n.ui-view-DialogView > header > * {\n    flex: 0 0 auto;\n    margin-right: 1rem;\n}\n.ui-view-DialogView > header > div {\n    flex: 1 1 auto;\n    margin-right: 0;\n}\n\n.ui-view-DialogView > footer {\n    background-color: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n    padding: 1rem;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    background-image: url('./mountains.webp');\n    background-size: contain;\n    background-repeat: repeat-x;\n    background-position: center bottom;\n}\n\n.ui-view-DialogView > footer > * {\n    min-width: 7rem;\n}\n"],sourceRoot:""}]);const f=s},2814:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"div.ui-view-FlexView {\n    display: flex;\n}\n\n.ui-view-FlexView .flex-0 {\n    flex: 0 0 auto;\n}\n\n.ui-view-FlexView .flex-1 {\n    flex: 1 1 auto;\n}\n\n.ui-view-FlexView .flex-2 {\n    flex: 2 2 auto;\n}\n\n.ui-view-FlexView .flex-3 {\n    flex: 3 3 auto;\n}\n\n.ui-view-FlexView .flex-4 {\n    flex: 4 4 auto;\n}\n\n.ui-view-FlexView .flex-5 {\n    flex: 5 5 auto;\n}\n\n","",{version:3,sources:["webpack://./src/ui/view/flex/flex-view.css"],names:[],mappings:"AAAA;IACI,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB",sourcesContent:["div.ui-view-FlexView {\n    display: flex;\n}\n\n.ui-view-FlexView .flex-0 {\n    flex: 0 0 auto;\n}\n\n.ui-view-FlexView .flex-1 {\n    flex: 1 1 auto;\n}\n\n.ui-view-FlexView .flex-2 {\n    flex: 2 2 auto;\n}\n\n.ui-view-FlexView .flex-3 {\n    flex: 3 3 auto;\n}\n\n.ui-view-FlexView .flex-4 {\n    flex: 4 4 auto;\n}\n\n.ui-view-FlexView .flex-5 {\n    flex: 5 5 auto;\n}\n\n"],sourceRoot:""}]);const l=a},7471:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"button.ui-view-FloatingButtonView {\n    font: inherit;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    border: none;\n    border-radius: 50%;\n    width: 3.5em;\n    height: 3.5em;\n    cursor: pointer;\n    box-shadow: var(--theme-shadow-button);\n    transition: all 0.2s;\n    filter: brightness(100%);\n}\n\nbutton.ui-view-FloatingButtonView.disabled {\n    cursor: default;\n    pointer-events: none;\n    box-shadow: none;\n    opacity: 0.5;\n    filter: grayscale(100%);\n}\n\nbutton.ui-view-FloatingButtonView:active {\n    box-shadow: var(--theme-shadow-button-pressed);\n    filter: brightness(150%);\n}\n\nbutton.ui-view-FloatingButtonView > svg {\n    width: 80%;\n    height: 80%;\n}\n","",{version:3,sources:["webpack://./src/ui/view/floating-button/floating-button-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,eAAe;IACf,sCAAsC;IACtC,oBAAoB;IACpB,wBAAwB;AAC5B;;AAEA;IACI,eAAe;IACf,oBAAoB;IACpB,gBAAgB;IAChB,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;IACI,8CAA8C;IAC9C,wBAAwB;AAC5B;;AAEA;IACI,UAAU;IACV,WAAW;AACf",sourcesContent:["button.ui-view-FloatingButtonView {\n    font: inherit;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    border: none;\n    border-radius: 50%;\n    width: 3.5em;\n    height: 3.5em;\n    cursor: pointer;\n    box-shadow: var(--theme-shadow-button);\n    transition: all 0.2s;\n    filter: brightness(100%);\n}\n\nbutton.ui-view-FloatingButtonView.disabled {\n    cursor: default;\n    pointer-events: none;\n    box-shadow: none;\n    opacity: 0.5;\n    filter: grayscale(100%);\n}\n\nbutton.ui-view-FloatingButtonView:active {\n    box-shadow: var(--theme-shadow-button-pressed);\n    filter: brightness(150%);\n}\n\nbutton.ui-view-FloatingButtonView > svg {\n    width: 80%;\n    height: 80%;\n}\n"],sourceRoot:""}]);const l=a},6060:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".ui-view-icons-GenericIcon {\n    --animation: ui-view-icons-GenericIcon-anim-rotate;\n    display: inline-block;\n    width: 1.5em;\n    height: 1.5em;\n    transition: all 0.2s;\n}\n\n.ui-view-icons-GenericIcon.clickable {\n    cursor: pointer;\n}\n\n.ui-view-icons-GenericIcon.clickable:active {\n    filter: brightness(150%);\n    transform: scale(1.1);\n}\n\n.ui-view-icons-GenericIcon.animate {\n    animation: var(--animation) 1s linear infinite;\n}\n\n@keyframes ui-view-icons-GenericIcon-anim-rotate {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(-360deg);\n    }\n}\n","",{version:3,sources:["webpack://./src/ui/view/icons/generic/generic-icon.css"],names:[],mappings:"AAAA;IACI,kDAAkD;IAClD,qBAAqB;IACrB,YAAY;IACZ,aAAa;IACb,oBAAoB;AACxB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,wBAAwB;IACxB,qBAAqB;AACzB;;AAEA;IACI,8CAA8C;AAClD;;AAEA;IACI;QACI,uBAAuB;IAC3B;IACA;QACI,0BAA0B;IAC9B;AACJ",sourcesContent:[".ui-view-icons-GenericIcon {\n    --animation: ui-view-icons-GenericIcon-anim-rotate;\n    display: inline-block;\n    width: 1.5em;\n    height: 1.5em;\n    transition: all 0.2s;\n}\n\n.ui-view-icons-GenericIcon.clickable {\n    cursor: pointer;\n}\n\n.ui-view-icons-GenericIcon.clickable:active {\n    filter: brightness(150%);\n    transform: scale(1.1);\n}\n\n.ui-view-icons-GenericIcon.animate {\n    animation: var(--animation) 1s linear infinite;\n}\n\n@keyframes ui-view-icons-GenericIcon-anim-rotate {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(-360deg);\n    }\n}\n"],sourceRoot:""}]);const l=a},7148:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".ui-view-input-IntegerView {\n}\n","",{version:3,sources:["webpack://./src/ui/view/input/integer/integer-view.css"],names:[],mappings:"AAAA;AACA",sourcesContent:[".ui-view-input-IntegerView {\n}\n"],sourceRoot:""}]);const l=a},944:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".ui-view-input-TextView {\n    display: inline-flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0.25rem;\n}\n\n.ui-view-input-TextView input {\n    line-height: 2rem;\n    background-color: var(--theme-color-input);\n    color: var(--theme-color-on-input);\n    border: none;\n    box-shadow: var(--theme-shadow-button);\n    padding: 0 0.5rem;\n}\n\n.ui-view-input-TextView.invalid input,\n.ui-view-input-TextView.invalid input:focus {\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n}\n\n.ui-view-input-TextView input:focus {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n\n.ui-view-input-TextView input[disabled] {\n    box-shadow: none;\n    outline: 1px solid var(--theme-color-input-opacity-50);\n    background-color: inherit;\n    color: inherit;\n}\n\n.ui-view-input-TextView.wide {\n    display: flex;\n    width: 100%;\n    box-sizing: content-box;\n    margin-left: 0;\n    margin-right: 0;\n}\n\n.ui-view-input-TextView.wide * {\n    width: 100%;\n    box-sizing: border-box;\n}\n\n.ui-view-input-TextView .hide {\n    opacity: 0;\n}\n","",{version:3,sources:["webpack://./src/ui/view/input/text/text-view.css"],names:[],mappings:"AAAA;IACI,oBAAoB;IACpB,sBAAsB;IACtB,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,iBAAiB;IACjB,0CAA0C;IAC1C,kCAAkC;IAClC,YAAY;IACZ,sCAAsC;IACtC,iBAAiB;AACrB;;AAEA;;IAEI,0CAA0C;IAC1C,kCAAkC;AACtC;;AAEA;IACI,iDAAiD;IACjD,yCAAyC;AAC7C;;AAEA;IACI,gBAAgB;IAChB,sDAAsD;IACtD,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,WAAW;IACX,uBAAuB;IACvB,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,WAAW;IACX,sBAAsB;AAC1B;;AAEA;IACI,UAAU;AACd",sourcesContent:[".ui-view-input-TextView {\n    display: inline-flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0.25rem;\n}\n\n.ui-view-input-TextView input {\n    line-height: 2rem;\n    background-color: var(--theme-color-input);\n    color: var(--theme-color-on-input);\n    border: none;\n    box-shadow: var(--theme-shadow-button);\n    padding: 0 0.5rem;\n}\n\n.ui-view-input-TextView.invalid input,\n.ui-view-input-TextView.invalid input:focus {\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n}\n\n.ui-view-input-TextView input:focus {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n\n.ui-view-input-TextView input[disabled] {\n    box-shadow: none;\n    outline: 1px solid var(--theme-color-input-opacity-50);\n    background-color: inherit;\n    color: inherit;\n}\n\n.ui-view-input-TextView.wide {\n    display: flex;\n    width: 100%;\n    box-sizing: content-box;\n    margin-left: 0;\n    margin-right: 0;\n}\n\n.ui-view-input-TextView.wide * {\n    width: 100%;\n    box-sizing: border-box;\n}\n\n.ui-view-input-TextView .hide {\n    opacity: 0;\n}\n"],sourceRoot:""}]);const l=a},1009:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".ui-view-LabelView {\n    opacity: .5;\n    font-size: .8rem;\n    line-height: 1.5rem;\n    margin: 0;\n    padding: 0 .5rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n.ui-view-LabelView.error {\n    color: var(--theme-color-error);\n}\n\n.ui-view-LabelView.hide {\n    visibility: hidden;\n}","",{version:3,sources:["webpack://./src/ui/view/label/label-view.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,gBAAgB;IAChB,mBAAmB;IACnB,SAAS;IACT,gBAAgB;IAChB,gBAAgB;IAChB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,kBAAkB;AACtB",sourcesContent:[".ui-view-LabelView {\n    opacity: .5;\n    font-size: .8rem;\n    line-height: 1.5rem;\n    margin: 0;\n    padding: 0 .5rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n.ui-view-LabelView.error {\n    color: var(--theme-color-error);\n}\n\n.ui-view-LabelView.hide {\n    visibility: hidden;\n}"],sourceRoot:""}]);const l=a},810:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".ui-view-OptionsView {\n    display: inline-block;\n}\n\n.ui-view-OptionsView.wide {\n    display: block;\n}\n\n.ui-view-OptionsView > div.options {\n    display: inline-flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    align-items: stretch;\n    border-radius: 0.5rem;\n    overflow: hidden;\n}\n\n.ui-view-OptionsView.wide > div.options {\n    display: flex;\n}\n\n.ui-view-OptionsView > div.options > .button {\n    margin: 0;\n    padding: 0.125rem 0.5rem;\n    flex: 1 1 auto;\n    box-shadow: 0 0 1px currentColor;\n    display: grid;\n    place-items: center;\n}\n\n.ui-view-OptionsView > div.options > .button.selected {\n    font-weight: 900;\n}\n\n.ui-view-OptionsView > div.options > .button.not-selected {\n    color: var(--theme-color-on-primary-opacity-50);\n}\n","",{version:3,sources:["webpack://./src/ui/view/options/options-view.css"],names:[],mappings:"AAAA;IACI,qBAAqB;AACzB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,oBAAoB;IACpB,eAAe;IACf,2BAA2B;IAC3B,oBAAoB;IACpB,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,SAAS;IACT,wBAAwB;IACxB,cAAc;IACd,gCAAgC;IAChC,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,+CAA+C;AACnD",sourcesContent:[".ui-view-OptionsView {\n    display: inline-block;\n}\n\n.ui-view-OptionsView.wide {\n    display: block;\n}\n\n.ui-view-OptionsView > div.options {\n    display: inline-flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    align-items: stretch;\n    border-radius: 0.5rem;\n    overflow: hidden;\n}\n\n.ui-view-OptionsView.wide > div.options {\n    display: flex;\n}\n\n.ui-view-OptionsView > div.options > .button {\n    margin: 0;\n    padding: 0.125rem 0.5rem;\n    flex: 1 1 auto;\n    box-shadow: 0 0 1px currentColor;\n    display: grid;\n    place-items: center;\n}\n\n.ui-view-OptionsView > div.options > .button.selected {\n    font-weight: 900;\n}\n\n.ui-view-OptionsView > div.options > .button.not-selected {\n    color: var(--theme-color-on-primary-opacity-50);\n}\n"],sourceRoot:""}]);const l=a},310:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".ui-view-RunnableView {\n    position: relative;\n    padding: 0;\n}\n\n.ui-view-RunnableView > div.children {\n    max-height: 100vh;\n    overflow: auto;\n}\n\n.ui-view-RunnableView > div {\n    margin: 0;\n    transition: opacity 0.2s;\n}\n\n.ui-view-RunnableView.running {\n    min-height: 4rem;\n}\n\n.ui-view-RunnableView.running > div.children {\n    opacity: 0.25;\n    pointer-events: none;\n}\n\n.ui-view-RunnableView.running > div.overlay {\n    opacity: 1;\n}\n\n.ui-view-RunnableView > div.overlay {\n    pointer-events: none;\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    display: grid;\n    place-content: center;\n    overflow: visible;\n    opacity: 0;\n}\n\n.ui-view-RunnableView > div.overlay > svg {\n    width: 5rem;\n    height: 5rem;\n    min-width: 5rem;\n    min-height: 5rem;\n    animation: view-RunnableView-anim 1s linear infinite alternate;\n}\n\n@keyframes view-RunnableView-anim {\n    0% {\n        opacity: 0;\n        transform: translateX(-100%) rotate(-60deg) scale(0.2);\n    }\n    25% {\n        opacity: 0.3;\n    }\n    50% {\n        opacity: 1;\n        transform: translateX(0) rotate(0) scale(1);\n    }\n    75% {\n        opacity: 0.3;\n    }\n    100% {\n        opacity: 0;\n        transform: translateX(+100%) rotate(+60deg) scale(0.2);\n    }\n}\n","",{version:3,sources:["webpack://./src/ui/view/runnable/runnable-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,iBAAiB;IACjB,cAAc;AAClB;;AAEA;IACI,SAAS;IACT,wBAAwB;AAC5B;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,oBAAoB;AACxB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,oBAAoB;IACpB,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,QAAQ;IACR,SAAS;IACT,WAAW;IACX,YAAY;IACZ,aAAa;IACb,qBAAqB;IACrB,iBAAiB;IACjB,UAAU;AACd;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,eAAe;IACf,gBAAgB;IAChB,8DAA8D;AAClE;;AAEA;IACI;QACI,UAAU;QACV,sDAAsD;IAC1D;IACA;QACI,YAAY;IAChB;IACA;QACI,UAAU;QACV,2CAA2C;IAC/C;IACA;QACI,YAAY;IAChB;IACA;QACI,UAAU;QACV,sDAAsD;IAC1D;AACJ",sourcesContent:[".ui-view-RunnableView {\n    position: relative;\n    padding: 0;\n}\n\n.ui-view-RunnableView > div.children {\n    max-height: 100vh;\n    overflow: auto;\n}\n\n.ui-view-RunnableView > div {\n    margin: 0;\n    transition: opacity 0.2s;\n}\n\n.ui-view-RunnableView.running {\n    min-height: 4rem;\n}\n\n.ui-view-RunnableView.running > div.children {\n    opacity: 0.25;\n    pointer-events: none;\n}\n\n.ui-view-RunnableView.running > div.overlay {\n    opacity: 1;\n}\n\n.ui-view-RunnableView > div.overlay {\n    pointer-events: none;\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    display: grid;\n    place-content: center;\n    overflow: visible;\n    opacity: 0;\n}\n\n.ui-view-RunnableView > div.overlay > svg {\n    width: 5rem;\n    height: 5rem;\n    min-width: 5rem;\n    min-height: 5rem;\n    animation: view-RunnableView-anim 1s linear infinite alternate;\n}\n\n@keyframes view-RunnableView-anim {\n    0% {\n        opacity: 0;\n        transform: translateX(-100%) rotate(-60deg) scale(0.2);\n    }\n    25% {\n        opacity: 0.3;\n    }\n    50% {\n        opacity: 1;\n        transform: translateX(0) rotate(0) scale(1);\n    }\n    75% {\n        opacity: 0.3;\n    }\n    100% {\n        opacity: 0;\n        transform: translateX(+100%) rotate(+60deg) scale(0.2);\n    }\n}\n"],sourceRoot:""}]);const l=a},3474:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".ui-view-TouchableView {\n    box-sizing: border-box;\n    font: inherit;\n    border: none;\n    padding: 0;\n    cursor: pointer;\n    transition: all 0.2s;\n    filter: brightness(100%);\n    margin: 0.5rem;\n}\n\n.ui-view-TouchableView:active {\n    transition: all 0.2s;\n    filter: brightness(150%);\n}\n\n.ui-view-TouchableView.disabled {\n    cursor: default;\n    filter: grayscale(100%);\n    opacity: .6;\n}","",{version:3,sources:["webpack://./src/ui/view/touchable/touchable-view.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,aAAa;IACb,YAAY;IACZ,UAAU;IACV,eAAe;IACf,oBAAoB;IACpB,wBAAwB;IACxB,cAAc;AAClB;;AAEA;IACI,oBAAoB;IACpB,wBAAwB;AAC5B;;AAEA;IACI,eAAe;IACf,uBAAuB;IACvB,WAAW;AACf",sourcesContent:[".ui-view-TouchableView {\n    box-sizing: border-box;\n    font: inherit;\n    border: none;\n    padding: 0;\n    cursor: pointer;\n    transition: all 0.2s;\n    filter: brightness(100%);\n    margin: 0.5rem;\n}\n\n.ui-view-TouchableView:active {\n    transition: all 0.2s;\n    filter: brightness(150%);\n}\n\n.ui-view-TouchableView.disabled {\n    cursor: default;\n    filter: grayscale(100%);\n    opacity: .6;\n}"],sourceRoot:""}]);const l=a},4854:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,'div.view-CodeEditorView {\n    position: relative;\n    margin: 0;\n    font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace;\n    font-size: 1rem;\n    color: #fffd;\n    background-color: #333;\n    padding: 1em;\n    line-height: 1.2;\n}\n\ndiv.view-CodeEditorView pre .comment {\n    color: #fff5;\n    font-style: italic;\n}\n\ndiv.view-CodeEditorView pre .number {\n    color: #fff;\n    font-weight: bolder;\n}\n\ndiv.view-CodeEditorView pre .type {\n    color: #cf9;\n}\n\ndiv.view-CodeEditorView pre .keyword {\n    color: #07f;\n}\n\ndiv.view-CodeEditorView pre .global {\n    color: #f70;\n}\n\ndiv.view-CodeEditorView pre .function {\n    color: #ed0;\n    font-weight: bold;\n}\n',"",{version:3,sources:["webpack://./src/view/code-editor/code-editor-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,SAAS;IACT,sEAAsE;IACtE,eAAe;IACf,YAAY;IACZ,sBAAsB;IACtB,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,mBAAmB;AACvB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;IACX,iBAAiB;AACrB",sourcesContent:['div.view-CodeEditorView {\n    position: relative;\n    margin: 0;\n    font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace;\n    font-size: 1rem;\n    color: #fffd;\n    background-color: #333;\n    padding: 1em;\n    line-height: 1.2;\n}\n\ndiv.view-CodeEditorView pre .comment {\n    color: #fff5;\n    font-style: italic;\n}\n\ndiv.view-CodeEditorView pre .number {\n    color: #fff;\n    font-weight: bolder;\n}\n\ndiv.view-CodeEditorView pre .type {\n    color: #cf9;\n}\n\ndiv.view-CodeEditorView pre .keyword {\n    color: #07f;\n}\n\ndiv.view-CodeEditorView pre .global {\n    color: #f70;\n}\n\ndiv.view-CodeEditorView pre .function {\n    color: #ed0;\n    font-weight: bold;\n}\n'],sourceRoot:""}]);const l=a},4371:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,'.view-program-ButtonProgram {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    gap: 0.5em;\n    padding: 0.5em;\n    border-radius: 0.5em;\n    width: 100%;\n    box-sizing: border-box;\n    margin: 0.5em 0;\n}\n\n.view-program-ButtonProgram > div.name {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-width: 12em;\n}\n\n.view-program-ButtonProgram > div.id {\n    opacity: 0.5;\n}\n\n.view-program-ButtonProgram > div.id::before {\n    content: "#";\n}\n',"",{version:3,sources:["webpack://./src/view/object-button/object-button.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,UAAU;IACV,cAAc;IACd,oBAAoB;IACpB,WAAW;IACX,sBAAsB;IACtB,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;IACvB,eAAe;AACnB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB",sourcesContent:['.view-program-ButtonProgram {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    gap: 0.5em;\n    padding: 0.5em;\n    border-radius: 0.5em;\n    width: 100%;\n    box-sizing: border-box;\n    margin: 0.5em 0;\n}\n\n.view-program-ButtonProgram > div.name {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-width: 12em;\n}\n\n.view-program-ButtonProgram > div.id {\n    opacity: 0.5;\n}\n\n.view-program-ButtonProgram > div.id::before {\n    content: "#";\n}\n'],sourceRoot:""}]);const l=a},6515:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".view-page-MainPage {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n}\n\n.view-page-MainPage > header > div.version {\n    opacity: 0.5;\n}\n\n.view-page-MainPage > main {\n    flex: 1 1 auto;\n    padding: 1em;\n    overflow: auto;\n}\n","",{version:3,sources:["webpack://./src/view/page/main/main-page.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,oBAAoB;IACpB,MAAM;AACV;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,cAAc;AAClB",sourcesContent:[".view-page-MainPage {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n}\n\n.view-page-MainPage > header > div.version {\n    opacity: 0.5;\n}\n\n.view-page-MainPage > main {\n    flex: 1 1 auto;\n    padding: 1em;\n    overflow: auto;\n}\n"],sourceRoot:""}]);const l=a},941:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".view-page-painter-AttributeDataEditorView {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    background: #000a;\n    z-index: 999;\n}\n\n.view-page-painter-AttributeDataEditorView > div.dialog {\n    position: static;\n    width: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n    border: 0;\n    margin: 0;\n    padding: 0;\n}\n\n.view-page-painter-AttributeDataEditorView > div.dialog > header,\n.view-page-painter-AttributeDataEditorView > div.dialog > footer {\n    flex: 0 0 auto;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 0.5em;\n    padding: 0.5em;\n}\n\n.view-page-painter-AttributeDataEditorView > div.dialog > main {\n    display: block;\n    box-sizing: border-box;\n    flex: 1 1 auto;\n    padding: 1em;\n}\n\n.view-page-painter-AttributeDataEditorView > div.dialog > main > textarea {\n    box-sizing: border-box;\n    border: none;\n    box-shadow: 0 0.125em 0.25em #000;\n    width: 50vw;\n    height: 70vh;\n    resize: none;\n}\n\n.view-page-painter-AttributeDataEditorView header > div {\n    opacity: 0.5;\n}\n\n.view-page-painter-AttributeDataEditorView header > div.name {\n    opacity: 1;\n    font-weight: 900;\n}\n\n.view-page-painter-AttributeDataEditorView footer div.theme-color-error {\n    padding: 0.125em 0.5em;\n}\n","",{version:3,sources:["webpack://./src/view/page/painter/attribute-data-editor/attribute-data-editor-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,MAAM;IACN,SAAS;IACT,WAAW;IACX,YAAY;IACZ,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,oBAAoB;IACpB,MAAM;IACN,SAAS;IACT,SAAS;IACT,UAAU;AACd;;AAEA;;IAEI,cAAc;IACd,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,UAAU;IACV,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,sBAAsB;IACtB,cAAc;IACd,YAAY;AAChB;;AAEA;IACI,sBAAsB;IACtB,YAAY;IACZ,iCAAiC;IACjC,WAAW;IACX,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,UAAU;IACV,gBAAgB;AACpB;;AAEA;IACI,sBAAsB;AAC1B",sourcesContent:[".view-page-painter-AttributeDataEditorView {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    background: #000a;\n    z-index: 999;\n}\n\n.view-page-painter-AttributeDataEditorView > div.dialog {\n    position: static;\n    width: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n    border: 0;\n    margin: 0;\n    padding: 0;\n}\n\n.view-page-painter-AttributeDataEditorView > div.dialog > header,\n.view-page-painter-AttributeDataEditorView > div.dialog > footer {\n    flex: 0 0 auto;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 0.5em;\n    padding: 0.5em;\n}\n\n.view-page-painter-AttributeDataEditorView > div.dialog > main {\n    display: block;\n    box-sizing: border-box;\n    flex: 1 1 auto;\n    padding: 1em;\n}\n\n.view-page-painter-AttributeDataEditorView > div.dialog > main > textarea {\n    box-sizing: border-box;\n    border: none;\n    box-shadow: 0 0.125em 0.25em #000;\n    width: 50vw;\n    height: 70vh;\n    resize: none;\n}\n\n.view-page-painter-AttributeDataEditorView header > div {\n    opacity: 0.5;\n}\n\n.view-page-painter-AttributeDataEditorView header > div.name {\n    opacity: 1;\n    font-weight: 900;\n}\n\n.view-page-painter-AttributeDataEditorView footer div.theme-color-error {\n    padding: 0.125em 0.5em;\n}\n"],sourceRoot:""}]);const l=a},1264:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".view-page-painter-PainterAttributeView.data {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    gap: 0.5em;\n    background: transparent;\n    color: #000;\n}\n\n.view-page-painter-PainterAttributeView.data:hover {\n    background: var(--theme-color-accent);\n    color: var(--theme-color-on-accent);\n}\n\n.view-page-painter-PainterAttributeView.data div.data-view {\n    font-size: 80%;\n    opacity: 0.5;\n    max-height: 3em;\n    overflow: hidden;\n    text-align: left;\n    line-height: 0.8;\n}\n","",{version:3,sources:["webpack://./src/view/page/painter/painter-attribute/painter-attribute-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,UAAU;IACV,uBAAuB;IACvB,WAAW;AACf;;AAEA;IACI,qCAAqC;IACrC,mCAAmC;AACvC;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,eAAe;IACf,gBAAgB;IAChB,gBAAgB;IAChB,gBAAgB;AACpB",sourcesContent:[".view-page-painter-PainterAttributeView.data {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    gap: 0.5em;\n    background: transparent;\n    color: #000;\n}\n\n.view-page-painter-PainterAttributeView.data:hover {\n    background: var(--theme-color-accent);\n    color: var(--theme-color-on-accent);\n}\n\n.view-page-painter-PainterAttributeView.data div.data-view {\n    font-size: 80%;\n    opacity: 0.5;\n    max-height: 3em;\n    overflow: hidden;\n    text-align: left;\n    line-height: 0.8;\n}\n"],sourceRoot:""}]);const l=a},4678:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".view-page-PainterPage {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    overflow: auto;\n}\n\n.view-page-PainterPage main {\n    display: grid;\n    grid-template-columns: 50vw 1fr;\n    gap: 1em;\n    place-items: start center;\n    padding: 1em;\n}\n\n.view-page-PainterPage main > div {\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n}\n\n.view-page-PainterPage main pre {\n    white-space: pre-wrap;\n    padding: 0.5em;\n    font-size: 80%;\n}\n\n.view-page-PainterPage main > div > canvas {\n    width: 50vw;\n    height: 50vh;\n    background-color: #000;\n    margin: 0;\n}\n\n.view-page-PainterPage main div.attributes {\n    display: grid;\n    gap: 0 0.5em;\n    grid-template-columns: auto auto 1fr;\n    place-items: center stretch;\n}\n","",{version:3,sources:["webpack://./src/view/page/painter/painter-page.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,oBAAoB;IACpB,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,+BAA+B;IAC/B,QAAQ;IACR,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,qBAAqB;IACrB,cAAc;IACd,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,oCAAoC;IACpC,2BAA2B;AAC/B",sourcesContent:[".view-page-PainterPage {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    overflow: auto;\n}\n\n.view-page-PainterPage main {\n    display: grid;\n    grid-template-columns: 50vw 1fr;\n    gap: 1em;\n    place-items: start center;\n    padding: 1em;\n}\n\n.view-page-PainterPage main > div {\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n}\n\n.view-page-PainterPage main pre {\n    white-space: pre-wrap;\n    padding: 0.5em;\n    font-size: 80%;\n}\n\n.view-page-PainterPage main > div > canvas {\n    width: 50vw;\n    height: 50vh;\n    background-color: #000;\n    margin: 0;\n}\n\n.view-page-PainterPage main div.attributes {\n    display: grid;\n    gap: 0 0.5em;\n    grid-template-columns: auto auto 1fr;\n    place-items: center stretch;\n}\n"],sourceRoot:""}]);const l=a},4944:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".view-program-PaintersList {\n}\n","",{version:3,sources:["webpack://./src/view/painters/list/painters-list.css"],names:[],mappings:"AAAA;AACA",sourcesContent:[".view-program-PaintersList {\n}\n"],sourceRoot:""}]);const l=a},6305:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(6164),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},9317:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(3788),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},3826:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(191),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},3003:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(9722),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},3073:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(9909),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},9898:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(1963),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},165:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(20),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},6958:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(2814),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},8892:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(7471),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},2477:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(6060),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},8291:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(7148),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},4342:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(944),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},6825:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(1009),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},3257:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(810),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},8054:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(310),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},5626:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(3474),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},117:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(4854),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},8037:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(4371),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},1411:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(6515),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},9096:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(941),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},378:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(1264),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},5584:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(4678),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},3888:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),u=t.n(l),c=t(3565),s=t.n(c),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),h=t(4944),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},3397:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var u=i(t(7294)),c=l(t(7003)),s=l(t(8851)),d=l(t(8290));t(6305);var f="main",A="painter";n.default=function(){var e=a(u.useState(f),2),n=e[0],t=e[1],r=a(u.useState(0),2),o=r[0],i=r[1];return u.createElement(s.default,{page:n},u.createElement(c.default,{key:f,onPainterEdit:function(e){t(A),i(e.id),console.log("🚀 [app] obj = ",e)}}),u.createElement(d.default,{key:A,id:o,onClose:function(){return t(f)}}))}},373:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(3397);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},9839:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.getDataService=void 0;var o=r(t(852)),i=null;n.getDataService=function(){return i||(i=new o.default),i}},751:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.makeTGDPainter=void 0;var o=r(t(4106)),i=r(t(9214)),a=r(t(9223)),l=t(2309);function u(e){return"".concat(e).padStart(2,"0")}n.makeTGDPainter=function(e){var n,t=new i.default,r={id:-1,name:null!=e?e:("Painter",n=new Date,"".concat("Painter"," ").concat(n.getFullYear(),"-").concat(u(n.getMonth()+1),"-").concat(u(n.getDate()))),description:"",vertexShader:a.default,fragmentShader:o.default,mode:l.TGDPainterMode.TRIANGLES,attributes:[],preview:{data:{elementCount:12,vertexCount:5,instanceCount:0,elements:[0,1,5,1,2,3,3,4,5,1,3,5],attributes:{attPoint:[-.5,1,0,.5,.5,1,.5,-.5,0,-1,-.5,-.5],attColor:[1,.5,0,0,1,1,1,.5,0,0,.5,1,0,.2,.4,0,.5,1]}}}};return t.compile(r),r}},617:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),n.useDataService=void 0;var a=i(t(7294)),l=t(9839);n.useDataService=function(){return a.useRef((0,l.getDataService)()).current}},1292:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(n,"__esModule",{value:!0}),n.usePaintersList=void 0;var l=i(t(7294)),u=t(617);n.usePaintersList=function(){var e=(0,u.useDataService)(),n=a(l.useState(null),2),t=n[0],r=n[1];return l.useEffect((function(){var n=function(){return e.painter.list().then(r)};return n(),e.painter.eventChange.add(n),function(){return e.painter.eventChange.remove(n)}}),[]),t}},5796:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{u(r.next(e))}catch(e){i(e)}}function l(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}u((r=r.apply(e,n||[])).next())}))},l=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var c=i(t(7294)),s=u(t(373)),d=u(t(1311)),f=t(745);t(9317),function(){a(this,void 0,void 0,(function(){var e;return l(this,(function(n){switch(n.label){case 0:return[4,d.default.apply({colors:{accent:{dark:"hsl(30, 90%, 40%)",base:"hsl(30, 80%, 60%)",light:"hsl(30, 100%, 75%)"},primary:{dark:"hsl(210, 80%, 50%)",base:"hsl(210, 70%, 70%)",light:"hsl(210, 100%, 80%)"},black:"#000d",white:"#fffd",error:"#f30",screen:"hsl(210, 50%, 20%)",frame:"hsl(210, 50%, 30%)",section:"hsl(210, 50%, 40%)",input:"hsl(210, 20%, 80%)"}})];case 1:if(n.sent(),!(e=document.getElementById("app")))throw Error('No element with id "app"!');return(0,f.createRoot)(e).render(c.createElement(s.default,null)),[2]}}))}))}()},852:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var o=r(t(7449)),i=t(3724);function a(e){return(0,i.isObject)(e)&&(0,i.isString)(e.name)&&(0,i.isString)(e.description)&&(0,i.isString)(e.vertexShader)&&(0,i.isString)(e.fragmentShader)}n.default=function(){this.painter=new o.default("painter",a)}},2796:function(e,n,t){var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{u(r.next(e))}catch(e){i(e)}}function l(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}u((r=r.apply(e,n||[])).next())}))},o=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}};Object.defineProperty(n,"__esModule",{value:!0});var i=t(3724),a="TGD-Database",l=new(function(){function e(){this.db=null}return e.prototype.add=function(e,n){return r(this,void 0,void 0,(function(){var t;return o(this,(function(r){switch(r.label){case 0:return"id"in n&&delete n.id,[4,this.exec(e,"readwrite",(function(e){return e.add(n)}))];case 1:if(t=r.sent(),(0,i.isNumber)(t))return[2,t];throw console.error('Unexpected result from add to "'.concat(e,'"!'),t),Error('Unexpected result from add to "'.concat(e,'"!'))}}))}))},e.prototype.get=function(e,n){return r(this,void 0,void 0,(function(){var t;return o(this,(function(r){switch(r.label){case 0:return[4,this.exec(e,"readonly",(function(e){return e.get(n)}))];case 1:t=r.sent();try{if(function(e){if(!(0,i.isObject)(e))return!1;var n=e.id,t=e.name;return(0,i.isNumber)(n)&&(0,i.isString)(t)}(t))return[2,t];throw Error("Unexpected result!")}catch(e){throw console.error(e,t),e}return[2]}}))}))},e.prototype.delete=function(e,n){return r(this,void 0,void 0,(function(){var t;return o(this,(function(r){switch(r.label){case 0:return[4,this.exec(e,"readwrite",(function(e){return e.delete(n)}))];case 1:return t=r.sent(),console.log("🚀 [database::delete] result = ",t),[2]}}))}))},e.prototype.list=function(e){return r(this,void 0,void 0,(function(){var n;return o(this,(function(t){switch(t.label){case 0:return n=[],[4,this.exec(e,"readonly",(function(e){return e.openCursor()}),(function(e){return e instanceof IDBCursorWithValue&&(n.push({id:e.key,name:e.value.name}),e.continue(),!0)}))];case 1:return t.sent(),console.log("🚀 [database] result = ",n),[2,n]}}))}))},e.prototype.update=function(e,n){return r(this,void 0,void 0,(function(){var t;return o(this,(function(r){switch(r.label){case 0:return[4,this.exec(e,"readwrite",(function(e){return e.put(n)}))];case 1:return t=r.sent(),console.log("🚀 [database] result = ",t),[2]}}))}))},e.prototype.exec=function(e,n,t,a){return r(this,void 0,void 0,(function(){var l=this;return o(this,(function(u){return[2,new Promise((function(u,c){return r(l,void 0,void 0,(function(){var r,l,s,d,f;return o(this,(function(o){switch(o.label){case 0:return[4,this.getDB()];case 1:return r=o.sent(),l=r.transaction([e],n),s=null,l.onerror=function(e){console.error("Unable to exec transaction!",e),c(e)},l.oncomplete=function(){return u(s)},d=l.objectStore(e),(f=t(d)).onsuccess=function(e){(0,i.isObject)(e.target)?a?!0!==a(e.target.result)&&u(s):s=e.target.result:c("evt.target was expected to be an object!")},f.onerror=function(n){console.error('Unable to add an object to store "'.concat(e,'"!'),n),c(n)},[2]}}))}))}))]}))}))},e.prototype.getDB=function(){return r(this,void 0,void 0,(function(){var e=this;return o(this,(function(n){return this.db?[2,this.db]:[2,new Promise((function(n,t){var r=window.indexedDB.open(a,1);r.onerror=function(e){console.error('Unabel to open database "'.concat(a,'" in version ').concat(1,"!\nError: "),r.error),console.error(e),t(r.error)},r.onsuccess=function(){var t=r.result;e.db=t,n(t)},r.onupgradeneeded=function(){r.result.createObjectStore("painter",{keyPath:"id",autoIncrement:!0})}}))]}))}))},e}());n.default=l},7449:function(e,n,t){var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{u(r.next(e))}catch(e){i(e)}}function l(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}u((r=r.apply(e,n||[])).next())}))},o=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var a=i(t(2796)),l=i(t(3816)),u=function(){function e(e,n){this.storeName=e,this.isValidType=n,this.eventChange=new l.default}return e.prototype.list=function(){return r(this,void 0,void 0,(function(){return o(this,(function(e){switch(e.label){case 0:return[4,a.default.list(this.storeName)];case 1:return[2,e.sent()]}}))}))},e.prototype.get=function(e){return r(this,void 0,void 0,(function(){var n;return o(this,(function(t){switch(t.label){case 0:return[4,a.default.get(this.storeName,e)];case 1:return n=t.sent(),this.isValidType(n)?[2,n]:(console.error('Bad object type in store "'.concat(this.storeName,'" for id ').concat(e,"!"),n),console.error("We will delete it from the database!"),[4,this.delete(e)]);case 2:return t.sent(),[2]}}))}))},e.prototype.add=function(e){return r(this,void 0,void 0,(function(){var n;return o(this,(function(t){switch(t.label){case 0:return[4,a.default.add(this.storeName,e)];case 1:return n=t.sent(),this.eventChange.fire(this),[2,n]}}))}))},e.prototype.update=function(e){return r(this,void 0,void 0,(function(){return o(this,(function(n){switch(n.label){case 0:return[4,a.default.update(this.storeName,e)];case 1:return n.sent(),this.eventChange.fire(this),[2]}}))}))},e.prototype.delete=function(e){return r(this,void 0,void 0,(function(){return o(this,(function(n){switch(n.label){case 0:return[4,a.default.delete(this.storeName,e)];case 1:return n.sent(),this.eventChange.fire(this),[2]}}))}))},e}();n.default=u},9114:function(e,n){var t=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},r=this&&this.__spreadArray||function(e,n,t){if(t||2===arguments.length)for(var r,o=0,i=n.length;o<i;o++)!r&&o in n||(r||(r=Array.prototype.slice.call(n,0,o)),r[o]=n[o]);return e.concat(r||Array.prototype.slice.call(n))};Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n){var o=0;return function(){for(var i=[],a=0;a<arguments.length;a++)i[a]=arguments[a];o&&window.clearTimeout(o),o=window.setTimeout((function(){o=0,e.apply(void 0,r([],t(i),!1))}),n)}}},3816:function(e,n){var t=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e){void 0===e&&(e="");var n=this;this.name=e,this.listeners=[],this.fire=function(e){var r,o;try{for(var i=t(n.listeners),a=i.next();!a.done;a=i.next()){var l=a.value;try{l(e)}catch(t){console.error("[".concat(n.name,"] Error in a listener!")),console.error(">  ex.: ",t),console.error(">  arg.: ",e)}}}catch(e){r={error:e}}finally{try{a&&!a.done&&(o=i.return)&&o.call(i)}finally{if(r)throw r.error}}}}return Object.defineProperty(e.prototype,"length",{get:function(){return this.listeners.length},enumerable:!1,configurable:!0}),e.prototype.add=function(e){this.remove(e),this.listeners.push(e)},e.prototype.remove=function(e){this.listeners=this.listeners.filter((function(n){return n!==e}))},e.prototype.removeAll=function(){this.listeners.splice(0,this.listeners.length)},e}();n.default=r},6535:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.getGrammarForLanguage=void 0,n.getGrammarForLanguage=function(e){return t};var t={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/g,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/g,lookbehind:!0,greedy:!0},{pattern:/^#.+$/g,lookbehind:!1,greedy:!0}],number:{pattern:/(^|[^\w$])(?:NaN|Infinity|0[bB][01]+(?:_[01]+)*n?|0[oO][0-7]+(?:_[0-7]+)*n?|0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?|\d+(?:_\d+)*n|(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?)(?![\w$])/,lookbehind:!0},type:r(["bvec2","bvec3","bvec4","dmat2","dmat2x2","dmat2x3","dmat2x4","dmat3","dmat3x2","dmat3x3","dmat3x4","dmat4","dmat4x2","dmat4x3","dmat4x4","dvec2","dvec3","dvec4","float","fvec2","fvec3","fvec4","isampler1D","isampler1DArray","isampler2D","isampler2DArray","isampler2DMS","isampler2DMSArray","isampler2DRect","isampler3D","isamplerBuffer","isamplerCube","isamplerCubeArray","ivec2","ivec3","ivec4","mat2","mat2x2","mat2x3","mat2x4","mat3","mat3x2","mat3x3","mat3x4","mat4","mat4x2","mat4x3","mat4x4","sample","sampler1D","sampler1DArray","sampler1DArrayShadow","sampler1DShadow","sampler2D","sampler2DArray","sampler2DArrayShadow","sampler2DMS","sampler2DMSArray","sampler2DRect","sampler2DRectShadow","sampler2DShadow","sampler3D","samplerBuffer","samplerCube","samplerCubeArray","samplerCubeArrayShadow","samplerCubeShadow","usampler1D","usampler1DArray","usampler2D","usampler2DArray","usampler2DMS","usampler2DMSArray","usampler2DRect","usampler3D","usamplerBuffer","usamplerCube","usamplerCubeArray","uvec2","uvec3","uvec4","vec2","vec3","vec4","void"]),keyword:r(["centroid","const","discard","else","flat","highp","if","in","inout","invariant","layout","lowp","mediump","noperspective","out","patch","precision","smooth","subroutine","uniform","active","asm","cast","class","common","enum","extern","external","filter","fixed","goto","half","hvec2","hvec3","hvec4","iimage1D","iimage1DArray","iimage2D","iimage2DArray","iimage3D","iimageBuffer","iimageCube","image1D","image1DArray","image1DArrayShadow","image1DShadow","image2D","image2DArray","image2DArrayShadow","image2DShadow","image3D","imageBuffer","imageCube","inline","input","interface","long","namespace","noinline","output","packed","partition","public","row_major","sampler3DRect","short","sizeof","static","superp","template","this","typedef","uimage1D","uimage1DArray","uimage2D","uimage2DArray","uimage3D","uimageBuffer","uimageCube","union","unsigned","using","volatile"]),global:r(["gl_DepthRange","gl_DepthRange.diff","gl_DepthRange.far","gl_DepthRange.near","gl_FragCoord","gl_FragDepth","gl_FrontFacing","gl_InstanceID","gl_PointCoord","gl_PointSize","gl_Position","gl_VertexID"]),function:r(["abs","acos","acosh","all","any","asin","asinh","atan","atanh","ceil","clamp","cos","cosh","cross","degrees","determinant","dFdx","dFdy","distance","dot","equal","exp","exp2","faceforward","floatBitsToInt","floatBitsToUint","floor","fract","fwidth","greaterThan","greaterThanEqual","intBitsToFloat","inverse","inversesqrt","isinf","isnan","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","modf","normalize","not","notEqual","outerProduct","packHalf2x16","packSnorm2x16","packUnorm2x16","pow","radians","reflect","refract","round","roundEven","sign","sin","sinh","smoothstep","sqrt","step","tan","tanh","texelFetch","texelFetchOffset","texture","textureGrad","textureGradOffset","textureLod","textureLodOffset","textureOffset","textureProj","textureProjGrad","textureProjGradOffset","textureProjLod","textureProjLodOffset","textureProjOffset","textureSize","transpose","trunc","uintBitsToFloat","unpackHalf2x16","unpackSnorm2x16","unpackUnorm2x16"])};function r(e){return{pattern:new RegExp("(?:[^a-zA-Z0-9_])(".concat(e.join("|"),")(?=[^a-zA-Z0-9_])")),lookbehind:!1,greedy:!0}}},2876:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__exportStar||function(e,n){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(n,t)||r(n,e,t)};Object.defineProperty(n,"__esModule",{value:!0}),o(t(6535),n)},3724:function(e,n){var t=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")};function r(e){return void 0===e}function o(e){return!Array.isArray(e)&&null!==e&&"object"==typeof e}function i(e){return"string"==typeof e}function a(e){return"string"==typeof e||void 0===e}function l(e){return"number"==typeof e}function u(e,n){if(void 0===n&&(n="data"),!l(e))throw Error("".concat(n," was expected to be a number but we got ").concat(typeof e,"!"))}function c(e){return"boolean"==typeof e}function s(e){var n,r;if(!Array.isArray(e))return!1;try{for(var o=t(e),a=o.next();!a.done;a=o.next())if(!i(a.value))return!1}catch(e){n={error:e}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(n)throw n.error}}return!0}function d(e){var n,r;if(!Array.isArray(e))return!1;try{for(var o=t(e),i=o.next();!i.done;i=o.next())if(!l(i.value))return!1}catch(e){n={error:e}}finally{try{i&&!i.done&&(r=o.return)&&r.call(o)}finally{if(n)throw n.error}}return!0}function f(e){return Array.isArray(e)}function A(e,n){if(void 0===n&&(n="data"),!f(e))throw Error("".concat(n," was expected to be an array but we got ").concat(typeof e,"!"))}Object.defineProperty(n,"__esModule",{value:!0}),n.assertArray=n.ensureArray=n.isArray=n.ensureNumberArray=n.assertNumberArray=n.assertStringArray=n.isNumberArray=n.isStringArray=n.isArrayBuffer=n.assertBoolean=n.isBoolean=n.ensureNumber=n.assertNumberOrUndefined=n.assertNumber=n.isNumber=n.assertStringOrIUndefined=n.isStringOrIUndefined=n.ensureString=n.assertStringOrNumber=n.assertString=n.isString=n.assertObject=n.isObject=n.isUndefined=void 0,n.isUndefined=r,n.isObject=o,n.assertObject=function(e,n){if(void 0===n&&(n="data"),!o(e))throw Error("".concat(n," was expected to be an object but we got ").concat(typeof e,"!"))},n.isString=i,n.assertString=function(e,n){if(void 0===n&&(n="data"),!i(e))throw Error("".concat(n," was expected to be a string but we got ").concat(typeof e,"!"))},n.assertStringOrNumber=function(e,n){if(void 0===n&&(n=""),!i(e)&&!l(e))throw Error("".concat(n," was expected to be a string or a number but we got ").concat(typeof e,"!"))},n.ensureString=function(e,n){return i(e)?e:n},n.isStringOrIUndefined=a,n.assertStringOrIUndefined=function(e,n){if(void 0===n&&(n="data"),!a(e))throw Error("".concat(n," was expected to ba a string or undefined but we got ").concat(typeof e,"!"))},n.isNumber=l,n.assertNumber=u,n.assertNumberOrUndefined=function(e,n){if(void 0===n&&(n="data"),!l(e)&&!r(e))throw Error("".concat(n," was expected to be a number but we got ").concat(typeof e,"!"))},n.ensureNumber=function(e,n){return l(e)?e:n},n.isBoolean=c,n.assertBoolean=function(e,n){if(void 0===n&&(n="data"),!c(e))throw Error("".concat(n," was expected to be a boolean but we got ").concat(typeof e,"!"))},n.isArrayBuffer=function(e){return!!e&&e instanceof ArrayBuffer},n.isStringArray=s,n.isNumberArray=d,n.assertStringArray=function(e,n){if(void 0===n&&(n="data"),!s(e))throw Error("".concat(n," was expected to be an array of strings but we got ").concat(typeof e,"!"))},n.assertNumberArray=function(e,n){void 0===n&&(n="data"),A(e,n);for(var t=0;t<e.length;t++)u(e[t],"".concat(n,"[").concat(t,"]"))},n.ensureNumberArray=function(e,n){return void 0===n&&(n=[]),d(e)?e:n},n.isArray=f,n.ensureArray=function(e,n){return void 0===n&&(n=[]),f(e)?e:n},n.assertArray=A},3282:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.getConstName=void 0,n.getConstName=function(e,n){for(var t in e)if(e[t]===n)return t;return"<".concat(n,">")}},9214:function(e,n,t){var r=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")},o=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(n,"__esModule",{value:!0});var i=t(3282),a=function(){function e(){var e=document.createElement("canvas").getContext("webgl2");if(!e)throw Error("Unable to create a WebGL2 context!");this.gl=e}return e.prototype.compile=function(e){var n=this.gl;try{var t=function(e){var n=e.createProgram();if(!n)throw Error("Unable to create WebGL Program!");return n}(n);if(function(e,n,t){try{var r=c(e.VERTEX_SHADER,e,t);e.attachShader(n,r)}catch(e){throw Error("<VERT>".concat(u(t,e)))}}(n,t,e.vertexShader),function(e,n,t){try{var r=c(e.FRAGMENT_SHADER,e,t);e.attachShader(n,r)}catch(e){throw Error("<FRAG>".concat(u(t,e)))}}(n,t,e.fragmentShader),n.linkProgram(t),!n.getProgramParameter(t,n.LINK_STATUS)){var r=n.getProgramInfoLog(t);throw new Error("Could NOT link WebGL2 program!\n"+r)}return e.attributes=function(e,n){for(var t=[],r=e.getProgramParameter(n,e.ACTIVE_ATTRIBUTES),o=0;o<r;o++){var i=e.getActiveAttrib(n,o);i&&t.push({name:null==i?void 0:i.name,divisor:0,dynamicGroup:0,type:"float",size:i.size,dim:s(e,i.type)})}return t}(n,t),null}catch(e){return e instanceof Error?e.message:"".concat(e)}},e}();n.default=a;var l=/^(ERROR|WARNING): [0-9]+:([0-9]+)/gu;function u(e,n){var t,i,a,u,c=e.split("\n"),s=n instanceof Error?n.message:JSON.stringify(n),d=new Set,f=new Set;try{for(var A=r(s.split("\n")),p=A.next();!p.done;p=A.next()){var h=p.value;l.lastIndex=-1;var m=l.exec(h);if(m){var v=o(m,3),g=(v[0],v[1],v[2]),b=parseInt(g);if(!isNaN(b)){f.add(b);for(var y=-2;y<=2;y++){var w=b+y;w<1||w>c.length||d.add(w)}}}}}catch(e){t={error:e}}finally{try{p&&!p.done&&(i=A.return)&&i.call(A)}finally{if(t)throw t.error}}var C=[],I=Array.from(d).sort(),B=0;try{for(var _=r(I),x=_.next();!x.done;x=_.next()){(g=x.value)-B>1&&C.push(""),B=g;for(var O=f.has(g)?">":" ",k="".concat(g);k.length<7;)k=" ".concat(k);h=c[g-1],C.push("".concat(O).concat(k," | ").concat(h))}}catch(e){a={error:e}}finally{try{x&&!x.done&&(u=_.return)&&u.call(_)}finally{if(a)throw a.error}}return"".concat(s,"\n").concat(C.join("\n"))}function c(e,n,t){var r,o=n.createShader(e);if(!o)throw Error("Unable to create a WebGL shader of type ".concat(e,"!"));if(n.shaderSource(o,t),n.compileShader(o),!n.getShaderParameter(o,n.COMPILE_STATUS))throw Error(null!==(r=n.getShaderInfoLog(o))&&void 0!==r?r:"Unknow error while compiling the shader!");return o}function s(e,n){switch(n){case e.FLOAT:return 1;case e.FLOAT_VEC2:return 2;case e.FLOAT_VEC3:return 3;case e.FLOAT_VEC4:return 4;default:throw Error("Don't know how to deal with type \"".concat((0,i.getConstName)(e,n),'"!'))}}},639:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(4235);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},6463:function(e,n,t){var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var o in n=arguments[t])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e},r.apply(this,arguments)},o=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{u(r.next(e))}catch(e){i(e)}}function l(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}u((r=r.apply(e,n||[])).next())}))},i=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},a=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")},l=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},u=this&&this.__spreadArray||function(e,n,t){if(t||2===arguments.length)for(var r,o=0,i=n.length;o<i;o++)!r&&o in n||(r||(r=Array.prototype.slice.call(n,0,o)),r[o]=n[o]);return e.concat(r||Array.prototype.slice.call(n))};Object.defineProperty(n,"__esModule",{value:!0});var c,s=t(3884),d=function(){function e(){var e=this;this._lang=window.localStorage.getItem("lang")||navigator.language.substring(0,2),this.$onChange=new A,this._=function(n){for(var t,r,o=[],i=1;i<arguments.length;i++)o[i-1]=arguments[i];try{var l=e._allTranslations;if(l[e.$lang]&&(d=l[e.$lang][n]))return f(d,o);var u=Object.keys(l);try{for(var c=a(u),s=c.next();!s.done;s=c.next()){var d,A=s.value,p=l[A];if("string"==typeof(d=p[n]))return f(d,o)}}catch(e){t={error:e}}finally{try{s&&!s.done&&(r=c.return)&&r.call(c)}finally{if(t)throw t.error}}return console.error('Missing translation for item "'.concat(n,'"!'),o),""}catch(e){throw Error('Error while looking for a translation of "'.concat(n,'":\n').concat(JSON.stringify(e,null,"  ")))}},this._allTranslations={},this._loaders=[]}return Object.defineProperty(e.prototype,"$fallbackLanguage",{get:function(){return s.fallback},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"$availableLanguages",{get:function(){return u([],l(s.languages),!1)},enumerable:!1,configurable:!0}),e.prototype.$loadDefaultLang=function(e){var n;return o(this,void 0,void 0,(function(){return i(this,(function(t){switch(t.label){case 0:return this._lang=null!==(n=null!=e?e:window.localStorage.getItem("lang"))&&void 0!==n?n:window.navigator.language.substring(0,2),[4,this._load(this._lang)];case 1:return t.sent(),this._lang===this.$fallbackLanguage?[3,3]:[4,this._load(this.$fallbackLanguage)];case 2:t.sent(),t.label=3;case 3:return this.$onChange.fire(this),[2]}}))}))},e.prototype.$toText=function(e,n){if(!e)return"";if("string"==typeof e)return e;var t=e[null!=n?n:this._lang];if("string"==typeof t)return t;var r=e[Object.keys(e)[0]];return"string"==typeof r?r:""},e.prototype.$toIntl=function(e,n){var t,r,o,i,l,u=null!=n?n:this.$lang;if(!e)return(t={})[u]="",t;if(Array.isArray(e))return(r={})[u]=e.filter(p).map((function(e){return"".concat(e)})).join(""),r;if("object"==typeof e){var c={},s=Object.keys(e).filter((function(e){return"string"==typeof e})).filter((function(e){return e.trim().length>1}));try{for(var d=a(s),f=d.next();!f.done;f=d.next()){var A=f.value;c[A]=e[A]}}catch(e){o={error:e}}finally{try{f&&!f.done&&(i=d.return)&&i.call(d)}finally{if(o)throw o.error}}return c}return(l={})[u]=e,l},e.prototype.$addTranslation=function(e,n,t){var r,o,i=this.$toIntl(t,e);i[e]=n;var l={};try{for(var u=a(Object.keys(i)),c=u.next();!c.done;c=u.next()){var s=c.value,d=i[s];0!==d.trim().length&&(l[s]=d)}}catch(e){r={error:e}}finally{try{c&&!c.done&&(o=u.return)&&o.call(u)}finally{if(r)throw r.error}}return l},Object.defineProperty(e.prototype,"$lang",{get:function(){return this.$availableLanguages.includes(this._lang)?this._lang:this.$fallbackLanguage},set:function(e){var n=this;this.$availableLanguages.includes(e)||(e=this.$fallbackLanguage),window.localStorage.setItem("lang",e),e!==this._lang&&(this._lang=e,window.localStorage.setItem("lang",e),this._load(e).then((function(){return n.$onChange.fire(n)})).catch(console.error))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"$",{get:function(){return this._},enumerable:!1,configurable:!0}),e.prototype._registerTranslationsLoader=function(e){this._loaders.push(e)},e.prototype._unregisterTranslationsLoader=function(e){this._loaders=this._loaders.filter((function(n){return n!==e}))},e.prototype._load=function(e){return o(this,void 0,void 0,(function(){var n,t,o,l,u,c,s,d;return i(this,(function(i){switch(i.label){case 0:if(void 0!==this._allTranslations[e])return[3,9];n={},i.label=1;case 1:i.trys.push([1,6,7,8]),t=a(this._loaders),o=t.next(),i.label=2;case 2:return o.done?[3,5]:(l=o.value,u=[r({},n)],[4,l(e)]);case 3:n=r.apply(void 0,u.concat([i.sent()])),i.label=4;case 4:return o=t.next(),[3,2];case 5:return[3,8];case 6:return c=i.sent(),s={error:c},[3,8];case 7:try{o&&!o.done&&(d=t.return)&&d.call(t)}finally{if(s)throw s.error}return[7];case 8:this._allTranslations[e]=n,i.label=9;case 9:return[2]}}))}))},e}();function f(e,n){for(var t="",r=0,o=c.Text,i=-1,a=0;a<e.length;a++){var l=e.charAt(a);switch(o){case c.Text:"\\"===l?(o=c.Escape,t+=e.substr(r,a-r),r=a+1):"$"===l&&(o=c.Placeholder,t+=e.substr(r,a-r),r=a+"$1".length);break;case c.Escape:o=c.Text;break;case c.Placeholder:if(o=c.Text,i=parseInt(l,10),isNaN(i))throw Error("Parsing error at position ".concat(a,' for translation "').concat(e,'"!\nEscape "$" if you don\'t want to use a placeholder.'));t+=n[i-1]||"";break;default:o=c.Text}}return t+e.substr(r)}n.default=d,function(e){e[e.Text=0]="Text",e[e.Escape=1]="Escape",e[e.Placeholder=2]="Placeholder"}(c||(c={}));var A=function(){function e(e){void 0===e&&(e="");var n=this;this.name=e,this.listeners=[],this.fire=function(e){var t,r;try{for(var o=a(n.listeners),i=o.next();!i.done;i=o.next()){var l=i.value;try{l(e)}catch(t){console.error("[".concat(n.name,"] Error in a listener!")),console.error(">  ex.: ",t),console.error(">  arg.: ",e)}}}catch(e){t={error:e}}finally{try{i&&!i.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}}}return Object.defineProperty(e.prototype,"length",{get:function(){return this.listeners.length},enumerable:!1,configurable:!0}),e.prototype.add=function(e){this.remove(e),this.listeners.push(e)},e.prototype.remove=function(e){this.listeners=this.listeners.filter((function(n){return n!==e}))},e.prototype.removeAll=function(){this.listeners.splice(0,this.listeners.length)},e}();function p(e){return"string"==typeof e}},4235:function(e,n,t){var r,o=this&&this.__extends||(r=function(e,n){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])},r(e,n)},function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function t(){this.constructor=e}r(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)}),i=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&i(n,e,t);return a(n,e),n},u=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{u(r.next(e))}catch(e){i(e)}}function l(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}u((r=r.apply(e,n||[])).next())}))},c=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.AppTranslations=void 0;var d=function(e){function n(){var n=e.call(this)||this;return n._registerTranslationsLoader((function(e){return u(n,void 0,void 0,(function(){return c(this,(function(n){switch(n.label){case 0:switch(e){case"en":return[3,1];case"fr":return[3,3];case"it":return[3,5]}return[3,7];case 1:return[4,Promise.resolve().then((function(){return l(t(9090))}))];case 2:case 4:case 6:return[2,n.sent().default];case 3:return[4,Promise.resolve().then((function(){return l(t(4997))}))];case 5:return[4,Promise.resolve().then((function(){return l(t(4283))}))];case 7:return[2,{}]}}))}))})),n}return o(n,e),Object.defineProperty(n.prototype,"anonymousTrace",{get:function(){return this._("anonymous-trace")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"badLogin",{get:function(){return this._("bad-login")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"cancel",{get:function(){return this._("cancel")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"changePassword",{get:function(){return this._("change-password")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"close",{get:function(){return this._("close")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"createAccount",{get:function(){return this._("create-account")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"day1",{get:function(){return this._("day-1")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"day2",{get:function(){return this._("day-2")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"day3",{get:function(){return this._("day-3")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"day4",{get:function(){return this._("day-4")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"day5",{get:function(){return this._("day-5")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"day6",{get:function(){return this._("day-6")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"day7",{get:function(){return this._("day-7")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"emailAddress",{get:function(){return this._("email-address")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"emailSent",{get:function(){return this._("email-sent")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"emailUsageDisclaimer",{get:function(){return this._("email-usage-disclaimer")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"errorContactSupport",{get:function(){return this._("error-contact-support")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"errorGpsPermissionDenied",{get:function(){return this._("error-gps-permission-denied")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"errorNicknameExists",{get:function(){return this._("error-nickname-exists")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"errorUnknown",{get:function(){return this._("error-unknown")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"errorWrongPassword",{get:function(){return this._("error-wrong-password")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"file",{get:function(){return this._("file")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"forgotPassword",{get:function(){return this._("forgot-password")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"gotIt",{get:function(){return this._("got-it")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"invalidEmail",{get:function(){return this._("invalid-email")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"language",{get:function(){return this._("language")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"lat",{get:function(){return this._("lat")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"level",{get:function(){return this._("level")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"level0",{get:function(){return this._("level-0")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"level1",{get:function(){return this._("level-1")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"level2",{get:function(){return this._("level-2")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"level3",{get:function(){return this._("level-3")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"level4",{get:function(){return this._("level-4")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"level5",{get:function(){return this._("level-5")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"level6",{get:function(){return this._("level-6")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"lng",{get:function(){return this._("lng")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"location",{get:function(){return this._("location")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"login",{get:function(){return this._("login")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"logout",{get:function(){return this._("logout")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"mapFilter",{get:function(){return this._("map-filter")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"mapLayer",{get:function(){return this._("map-layer")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"missingEmail",{get:function(){return this._("missing-email")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"month1",{get:function(){return this._("month-1")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"month10",{get:function(){return this._("month-10")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"month11",{get:function(){return this._("month-11")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"month12",{get:function(){return this._("month-12")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"month2",{get:function(){return this._("month-2")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"month3",{get:function(){return this._("month-3")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"month4",{get:function(){return this._("month-4")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"month5",{get:function(){return this._("month-5")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"month6",{get:function(){return this._("month-6")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"month7",{get:function(){return this._("month-7")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"month8",{get:function(){return this._("month-8")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"month9",{get:function(){return this._("month-9")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"newPassword",{get:function(){return this._("new-password")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"newPasswordRepeat",{get:function(){return this._("new-password-repeat")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"nickname",{get:function(){return this._("nickname")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"noMatch",{get:function(){return this._("no-match")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"ok",{get:function(){return this._("ok")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"oldPassword",{get:function(){return this._("old-password")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"onlyMyTraces",{get:function(){return this._("only-my-traces")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"password",{get:function(){return this._("password")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"passwordTooShort",{get:function(){return this._("password-too-short")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"personalSpace",{get:function(){return this._("personal-space")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"place",{get:function(){return this._("place")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"remove",{get:function(){return this._("remove")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"rgpd",{get:function(){return this._("rgpd")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"save",{get:function(){return this._("save")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"seeMore",{get:function(){return this._("see-more")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"selectLanguage",{get:function(){return this._("select-language")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"sport",{get:function(){return this._("sport")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"sport0",{get:function(){return this._("sport-0")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"sport1",{get:function(){return this._("sport-1")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"sport10",{get:function(){return this._("sport-10")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"sport11",{get:function(){return this._("sport-11")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"sport12",{get:function(){return this._("sport-12")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"sport2",{get:function(){return this._("sport-2")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"sport3",{get:function(){return this._("sport-3")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"sport4",{get:function(){return this._("sport-4")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"sport5",{get:function(){return this._("sport-5")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"sport6",{get:function(){return this._("sport-6")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"sport7",{get:function(){return this._("sport-7")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"sport8",{get:function(){return this._("sport-8")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"sport9",{get:function(){return this._("sport-9")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"timeBarrier",{get:function(){return this._("time-barrier")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"traceGroup",{get:function(){return this._("trace-group")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"traceId",{get:function(){return this._("trace-id")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"traceName",{get:function(){return this._("trace-name")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"unknown",{get:function(){return this._("unknown")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"userIsNotGranted",{get:function(){return this._("user-is-not-granted")},enumerable:!1,configurable:!0}),n}(s(t(6463)).default);n.AppTranslations=d,n.default=new d},9090:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var o=r(t(3191));n.default=o.default},4997:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var o=r(t(320));n.default=o.default},4283:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var o=r(t(7753));n.default=o.default},2309:(e,n)=>{var t;Object.defineProperty(n,"__esModule",{value:!0}),n.TGDPainterMode=void 0,(t=n.TGDPainterMode||(n.TGDPainterMode={}))[t.POINTS=1]="POINTS",t[t.LINE_STRIP=2]="LINE_STRIP",t[t.LINE_LOOP=3]="LINE_LOOP",t[t.LINES=4]="LINES",t[t.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",t[t.TRIANGLE_FAN=6]="TRIANGLE_FAN",t[t.TRIANGLES=7]="TRIANGLES"},8725:function(e,n){var t=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},r=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0});var o=1e-6,i=255,a=1/6,l=1/15,u=1/99,c=1/i,s=function(){function e(n){void 0===n&&(n="#000000"),this.R=0,this.G=0,this.B=0,this.H=0,this.S=0,this.L=0,this.A=1,e.isValid(n)&&this.parse(n)}return e.fromColorOrString=function(n){return n?n instanceof e?n:new e(n):e.newBlack()},e.fromArrayRGB=function(n){if(!Array.isArray(n))return console.error("Invalid param rgb: ",n),e.fromRGB(0,0,0);for(;n.length<3;)n.push(0);var r=t(n,3),o=r[0],i=r[1],a=r[2];return e.fromRGB(o,i,a)},e.fromArrayRGBA=function(n){if(!Array.isArray(n))return console.error("Invalid param rgba: ",n),e.fromRGB(0,0,0);for(;n.length<4;)n.push(1);var r=t(n,4),o=r[0],i=r[1],a=r[2],l=r[3];return e.fromRGBA(o,i,a,l)},e.fromHSL=function(n,t,r){var o=new e;return o.H=n,o.S=t,o.L=r,o.hsl2rgb(),o},e.fromHSLA=function(n,t,r,o){var i=new e;return i.H=n,i.S=t,i.L=r,i.hsl2rgb(),i.A=o,i},e.isValid=function(e){if("string"!=typeof e)return!1;if("#"===e.charAt(0))switch(e.length){case"#RGB".length:case"#RGBA".length:case"#RRGGBB".length:case"#RRGGBBAA".length:return!0;default:return!1}return A.lastIndex=-1,!!A.test(e)},e.contrast=function(n,t){var r=e.fromColorOrString(n),o=e.fromColorOrString(t),i=e.mix(r,o,o.A),a=r.luminance(),l=i.luminance(),u=.05;return a>l?(a+u)/(l+u):(l+u)/(a+u)},e.bestContrast=function(n){for(var t,o,i=[],a=1;a<arguments.length;a++)i[a-1]=arguments[a];var l=e.fromColorOrString(n),u=0,c=-1,s=0;try{for(var d=r(i),f=d.next();!f.done;f=d.next()){var A=f.value,p=e.contrast(l,A);p>u&&(u=p,c=s),s++}}catch(e){t={error:e}}finally{try{f&&!f.done&&(o=d.return)&&o.call(d)}finally{if(t)throw t.error}}return i[c]},e.luminance=function(n){return void 0===n?0:e.fromColorOrString(n).luminance()},e.luminanceStep=function(n){if(!e.isValid(n))return-1;var t=e.luminance(n),r=.05;return(t+r)/r>1.05/(t+r)?1:0},e.isDarkColor=function(n){return 0===e.luminanceStep(n)},e.isLightColor=function(n){return 1===e.luminanceStep(n)},e.makeDarker=function(n,t){if(void 0===t&&(t=.5),t<=0)return new e("#000");var r=e.fromColorOrString(n);return t>=1?r:e.fromHSLA(r.H,r.S,r.L,r.A*t)},e.makeHueRotated=function(n,t){void 0===t&&(t=.5);var r=e.fromColorOrString(n);return r.rgb2hsl(),r.H+=t-Math.floor(t),r.H>1&&r.H--,r.hsl2rgb(),r},e.makeTransparent=function(n,t){var r=e.fromColorOrString(n);return r.A=p(t),r},e.mix=function(n,t,r){void 0===r&&(r=.5);var o=e.fromColorOrString(n),i=e.fromColorOrString(t),a=1-r;return e.fromRGBA(r*i.R+a*o.R,r*i.G+a*o.G,r*i.B+a*o.B,r*i.A+a*o.A)},e.newBlack=function(){return e.fromRGB(0,0,0)},e.newWhite=function(){return e.fromRGB(1,1,1)},e.fromRGB=function(n,t,r){var o=new e;return o.R=n,o.G=t,o.B=r,o.A=1,o},e.fromRGBA=function(n,t,r,o){var i=new e;return i.R=n,i.G=t,i.B=r,i.A=o,i},e.normalize=function(n){return new e(n).stringify()},e.interpolate=function(n,t){if(t<1)return[];for(var r=n.map((function(n){return"string"==typeof n?new e(n):n})),o=[],i=1;i<=t;i++){var a=i/(t+1);o.push(e.ramp(r,a))}return o},e.ramp=function(n,t){if(void 0===t&&(t=.5),0===n.length)return e.newBlack();if(1===n.length)return n[0];var r=n.length-1,o=Math.floor(t*r),i=n[o];if(o===r)return i;var a=n[o+1],l=t*r-o;return e.mix(i,a,l)},e.prototype.copy=function(){var n=new e;return n.R=this.R,n.G=this.G,n.B=this.B,n.A=this.A,n.H=this.H,n.S=this.S,n.L=this.L,n},e.prototype.hsl2rgb=function(){var e=6*this.H,n=this.S,t=this.L,r=(1-Math.abs(t+t-1))*n,o=r*(1-Math.abs(e%2-1)),i=0,a=0,l=0;e<3?e<1?(i=r,a=o,l=0):e<2?(i=o,a=r,l=0):(i=0,a=r,l=o):e<4?(i=0,a=o,l=r):e<5?(i=o,a=0,l=r):(i=r,a=0,l=o);var u=t-.5*r;this.R=i+u,this.G=a+u,this.B=l+u},e.prototype.luminance=function(){var e=this,n=e.R,t=e.G,r=e.B,o=.03928,i=.07739938080495357,a=.055,l=.9478672985781991;return.2126*(n<o?n*i:Math.pow((n+a)*l,2.4))+.7152*(t<o?n*i:Math.pow((t+a)*l,2.4))+.0722*(r<o?n*i:Math.pow((r+a)*l,2.4))},e.prototype.luminanceStep=function(){return this.luminance()<.62?0:1},e.prototype.parse=function(e){void 0===e&&(e="#000000");var n=e.trim().toUpperCase();return!!(this.parseHexa.call(this,n)||this.parseRGB.call(this,n)||this.parseRGBA.call(this,n)||this.parseHSL.call(this,n))},e.prototype.rgb2hsl=function(){var e=this.R,n=this.G,t=this.B,r=Math.min(e,n,t),i=Math.max(e,n,t),l=i-r;this.L=.5*(i+r),l<o?(this.H=0,this.S=0):(this.S=l/(1-Math.abs(this.L+this.L-1)),this.H=i===e?n>=t?a*((n-t)/l):a*((t-n)/l):i===n?a*(2+(t-e)/l):a*(4+(e-n)/l))},e.prototype.stringify=function(){var e=h(this.R*i)+h(this.G*i)+h(this.B*i);this.A<1&&(e+=h(this.A*i));for(var n=!0,t=0;t<e.length;t+=2)if(e.charAt(t)!==e.charAt(t+1)){n=!1;break}return n&&(e=6===e.length?e.charAt(0)+e.charAt(2)+e.charAt(4):e.charAt(0)+e.charAt(2)+e.charAt(4)+e.charAt(6)),"#".concat(e)},e.prototype.toArrayRGB=function(){return[this.R,this.G,this.B]},e.prototype.toArrayRGBA=function(){return[this.R,this.G,this.B,this.A]},e.prototype.parseHexa=function(e){if("#"!==e.charAt(0))return!1;var n=0,t=0,r=0,o=1;switch(e.length){case"#fff".length:n=parseInt(e.charAt(1),16)*l,t=parseInt(e.charAt(2),16)*l,r=parseInt(e.charAt(3),16)*l;break;case"#fff7".length:n=parseInt(e.charAt(1),16)*l,t=parseInt(e.charAt(2),16)*l,r=parseInt(e.charAt(3),16)*l,o=parseInt(e.charAt(4),16)*l;break;case"#ffffff".length:n=parseInt(e.substr(1,2),16)*c,t=parseInt(e.substr(3,2),16)*c,r=parseInt(e.substr(5,2),16)*c;break;case"#ffffff77".length:n=parseInt(e.substr(1,2),16)*c,t=parseInt(e.substr(3,2),16)*c,r=parseInt(e.substr(5,2),16)*c,o=parseInt(e.substr(7,2),16)*c}return isNaN(n)||isNaN(t)||isNaN(r)||isNaN(o)?this.R=this.G=this.B=this.A=0:(this.R=n,this.G=t,this.B=r,this.A=o),!0},e.prototype.parseHSL=function(e){A.lastIndex=-1;var n=A.exec(e);return!!n&&(this.H=p(.002785515320334262*parseInt(n[1],10)),this.S=p(parseInt(n[2],10)*u),this.L=p(parseInt(n[3],10)*u),this.A=1,this.hsl2rgb(),!0)},e.prototype.parseRGB=function(e){var n=d.exec(e);return!!n&&(this.R=p(parseInt(n[1],10)*c),this.G=p(parseInt(n[2],10)*c),this.B=p(parseInt(n[3],10)*c),this.A=1,!0)},e.prototype.parseRGBA=function(e){var n=f.exec(e);return!!n&&(this.R=p(parseInt(n[1],10)*c),this.G=p(parseInt(n[2],10)*c),this.B=p(parseInt(n[3],10)*c),this.A=p(parseFloat(n[4])),!0)},e}();n.default=s;var d=/^RGB[\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/,f=/^RGBA[\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)[^0-9.]+([0-9.]+)/,A=/^HSL\(\s*([0-9]+)[\s,]+([0-9]+)%[\s,]+([0-9]+)%\s*\)$/i;function p(e){return Math.min(1,Math.max(0,e))}function h(e){var n=Math.min(Math.max(Math.floor(e+o),0),i).toString(16);return n.length<"FF".length&&(n="0".concat(n)),n}},7857:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(8725);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},8499:function(e,n,t){var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var o in n=arguments[t])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e},r.apply(this,arguments)},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.makeIconView=void 0;var i=o(t(7294)),a=o(t(7470)),l=new Map;n.makeIconView=function(e,n){var t=l.get(e);if(t)return t;var o=function(n){return i.default.createElement(a.default,r({},n,{value:e}))};return o.id=null!=n?n:e,l.set(e,o),o}},1078:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__exportStar||function(e,n){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(n,t)||r(n,e,t)};Object.defineProperty(n,"__esModule",{value:!0}),o(t(8499),n)},2859:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(n,"__esModule",{value:!0}),n.useChangeableValue=void 0;var l=i(t(7294));n.useChangeableValue=function(e){var n=a(l.useState(e.value),2),t=n[0],r=n[1];return l.useEffect((function(){r(e.value)}),[e.value]),[t,function(n){r(n),e.onChange&&e.onChange(n)}]}},4870:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.useTranslate=void 0;var u=i(t(7294)),c=l(t(639));c.default.$loadDefaultLang(),n.useTranslate=function(){var e=a(u.useState(c.default.$lang),2),n=(e[0],e[1]);return u.useEffect((function(){var e=function(){return n(c.default.$lang)};return c.default.$onChange.add(e),function(){return c.default.$onChange.remove(e)}}),[]),c.default}},5839:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.ModalStateEnum=void 0;var r,o=t(4137);!function(e){e[e.CLOSE=0]="CLOSE",e[e.OPEN=1]="OPEN"}(r=n.ModalStateEnum||(n.ModalStateEnum={}));var i=function(){function e(){this.autoClosable=!0,this.state=r.CLOSE}return e.initialize=function(){e._initialized||(window.history.pushState(a(0),document.title),window.addEventListener("popstate",(function(n){var t=n.state;if(function(e){if(!e)return!1;var n=e.modals;return!!n&&"number"==typeof n.depth}(t))for(var r=t.modals.depth,o=e._stack;o.length>r;){var i=o.pop();if(!i)break;i.actualHide(!0)}}),!0),e._initialized=!0)},e.prototype.show=function(){this.state!==r.OPEN&&!1!==this.actualShow()&&(this.state=r.OPEN,this.autoClosable&&(e.initialize(),e._stack.push(this),window.history.pushState(a(e._stack.length),document.title)))},e.prototype.hide=function(){this.state!==r.CLOSE&&(this.autoClosable?window.history.back():this.actualHide(!1))},e.prototype.autoClose=function(){this.state===r.OPEN&&this===e._stack.top()&&window.history.back()},e._stack=new o.ModalStack,e._initialized=!1,e}();function a(e){return{modals:{depth:e}}}n.default=i},9935:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(2293);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},4137:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.ModalStack=void 0;var t=function(){function e(){this.modals=[]}return e.prototype.pop=function(){return this.modals.pop()},e.prototype.push=function(e){this.modals.push(e)},e.prototype.top=function(){return this.modals.at(-1)},Object.defineProperty(e.prototype,"length",{get:function(){return this.modals.length},enumerable:!1,configurable:!0}),e.prototype.depth=function(e){return this.modals.indexOf(e)},e}();n.ModalStack=t},2293:function(e,n,t){var r,o=this&&this.__extends||(r=function(e,n){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])},r(e,n)},function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function t(){this.constructor=e}r(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)}),i=this&&this.__assign||function(){return i=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var o in n=arguments[t])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e},i.apply(this,arguments)},a=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{u(r.next(e))}catch(e){i(e)}}function l(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}u((r=r.apply(e,n||[])).next())}))},l=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var c=u(t(5839)),s=u(t(1874)),d=u(t(1142)),f=u(t(7294)),A=u(t(3935)),p=u(t(6555)),h=u(t(639));t(3826);var m=function(e){function n(n){var t,r=this;(r=e.call(this)||this).detachScreenTimeoutId=0,r.view=null,r.handleScreenClick=function(e){r.options.autoClosable&&e.target===r.screen&&r.autoClose()},r.handleKeyDown=function(e){r.options.autoClosable&&"Escape"===e.key&&r.autoClose()};var o=v(n);r.options=i({align:"",padding:"1rem",transitionDuration:300,autoClosable:!0,onClose:function(){}},o),r.autoClosable=null===(t=o.autoClosable)||void 0===t||t;var a=function(e){var n,t=document.createElement("div");return t.classList.add("ui-Modal"),function(e,n){var t=n.split("");t.includes("L")&&e.classList.add("align-left"),t.includes("R")&&e.classList.add("align-right"),t.includes("T")&&e.classList.add("align-top"),t.includes("B")&&e.classList.add("align-bottom")}(t,null!==(n=e.align)&&void 0!==n?n:""),function(e,n){e.style.setProperty("--padding",n)}(t,e.padding),function(e,n){e.style.setProperty("--transition-duration","".concat(Math.floor(n),"ms"))}(t,e.transitionDuration),function(e,n){n&&e.style.setProperty("--background-color",n)}(t,e.backgroundColor),t}(r.options),l=document.createElement("div");return a.appendChild(l),r.screen=a,r.frame=l,r}return o(n,e),n.show=function(e){var t=new n(e);return t.show(),t},n.prototype.actualShow=function(){window.clearTimeout(this.detachScreenTimeoutId);var e=this.screen,n=this.frame,t=this.options.content;return t&&A.default.render(f.default.createElement(f.default.Fragment,null,t),n),window.clearTimeout(this.detachScreenTimeoutId),window.document.body.appendChild(e),window.setTimeout((function(){return e.classList.add("show")})),e.addEventListener("click",this.handleScreenClick,!1),document.addEventListener("keydown",this.handleKeyDown,!0),!0},n.prototype.actualHide=function(e){var n=this.screen,t=this.options;if(n.classList.remove("show"),this.detachScreenTimeoutId=window.setTimeout((function(){window.document.body.removeChild(n)}),t.transitionDuration),n.removeEventListener("click",this.handleScreenClick,!1),document.removeEventListener("keydown",this.handleKeyDown,!0),e){var r=t.onClose;r&&r()}},n.confirm=function(e){return a(this,void 0,void 0,(function(){var t;return l(this,(function(r){return t=v(e),[2,new Promise((function(e){var r,o,a,l=new n(i(i({autoClosable:!0},t),{content:f.default.createElement(s.default,{colorOK:t.colorOK,title:t.title,labelOK:null!==(o=null!==(r=t.labelOK)&&void 0!==r?r:t.title)&&void 0!==o?o:h.default.ok,labelCancel:null!==(a=t.labelCancel)&&void 0!==a?a:h.default.cancel,onOK:function(){return u(!0)},onCancel:function(){return u(!1)}},g(t.content))})),u=function(n){l.hide(),e(n)};l.show()}))]}))}))},n.info=function(e){return a(this,void 0,void 0,(function(){var t;return l(this,(function(r){return t=v(e),[2,new Promise((function(e){var r,o=new n(i(i({},t),{content:f.default.createElement(s.default,{hideCancel:!0,flat:!0,labelOK:null!==(r=t.labelOK)&&void 0!==r?r:h.default.gotIt,onOK:function(){o.hide(),e()}},g(t.content))}));o.show()}))]}))}))},n.error=function(e){return a(this,void 0,void 0,(function(){var t;return l(this,(function(r){return t=v(e),[2,new Promise((function(e){var r=new n(i(i({autoClosable:!1},t),{content:f.default.createElement(s.default,{hideCancel:!0,labelOK:h.default.ok,onOK:function(){r.hide(),e()}},f.default.createElement("div",{className:"ui-Modal-error"},g(t.content))),onClose:function(){e()}}));r.show()}))]}))}))},n.wait=function(e,t){return a(this,void 0,void 0,(function(){var r;return l(this,(function(o){return r=v(e),[2,new Promise((function(e,o){var a=new n(i(i({},r),{content:f.default.createElement("div",{className:"ui-Modal-promise-waiter"},f.default.createElement(p.default,null),g(r.content)),autoClosable:!1}));a.show(),t.then((function(n){a.hide(),e(n)})).catch((function(e){a.hide(),o(e)}))}))]}))}))},n}(c.default);function v(e){return(n=e)&&n.content?e:{content:e};var n}function g(e){return"string"==typeof e?f.default.createElement("p",null,e):e instanceof Error?f.default.createElement("p",null,e.message):"object"==typeof e&&f.default.isValidElement(e)?e:f.default.createElement("pre",null,d.default.stringify(e,null,"  "))}n.default=m},4977:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0});var t=function(){function e(e){this.target=null!=e?e:window.document.body}return e.prototype.set=function(e,n){this.target.style.setProperty(this.sanitizeName(e),n)},e.prototype.get=function(e){return this.target.style.getPropertyValue(this.sanitizeName(e))},e.prototype.sanitizeName=function(e){return e.startsWith("--")?e:"--".concat(e)},e}();n.default=t},1311:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(352);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},352:function(e,n,t){var r=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var i=o(t(7857)),a=o(t(4977));t(3003);var l="theme",u="-color",c="-opacity-",s={apply:function(e,n){d=e;var t=new a.default(n);(function(e,n){var t=i.default.fromColorOrString(e.colors.white),r=i.default.fromColorOrString(e.colors.black);f(n,"primary",e.colors.primary.base,t,r),f(n,"primary-light",e.colors.primary.light,t,r),f(n,"primary-dark",e.colors.primary.dark,t,r),f(n,"accent",e.colors.accent.base,t,r),f(n,"accent-light",e.colors.accent.light,t,r),f(n,"accent-dark",e.colors.accent.dark,t,r),f(n,"error",e.colors.error,t,r),f(n,"screen",e.colors.screen,t,r),f(n,"frame",e.colors.frame,t,r),f(n,"section",e.colors.section,t,r),f(n,"input",e.colors.input,t,r),f(n,"white",e.colors.white,t,r),f(n,"black",e.colors.black,t,r),n.set(p("link"),i.default.bestContrast(e.colors.frame,e.colors.accent.dark,e.colors.accent.base,e.colors.accent.light))})(e,t),function(e,n){var t,o,i={card:1,button:2,header:4,"button-pressed":8,dialog:24};try{for(var a=r(Object.keys(i)),u=a.next();!u.done;u=a.next()){var c=u.value,s=.0625*i[c];n.set("".concat(l).concat("-shadow","-").concat(c),"0 ".concat(s,"rem ").concat(2*s,"rem ").concat("#000a"))}}catch(e){t={error:e}}finally{try{u&&!u.done&&(o=a.return)&&o.call(a)}finally{if(t)throw t.error}}}(0,t)},get current(){return d},get defaultDarkTheme(){return{colors:{black:"#000",white:"#fff",error:"#f20",screen:"#ddd",frame:"#e9ebef",section:"#eff2f5",input:"#fff",primary:{dark:"#050A56",base:"#0083CB",light:"#00D4FE"},accent:{dark:"#802d00",base:"#cb4800",light:"#ff8c4d"}}}},get defaultLightTheme(){return{colors:{black:"#111e",white:"#eeee",error:"#f20",screen:"#bbb",frame:"#ccc",section:"#ddd",input:"#eee",primary:{dark:"#1f2859",base:"#3e50b4",light:"#5871ff"},accent:{dark:"#59501f",base:"#b4a23e",light:"#ffe658"}}}}};n.default=s;var d=s.defaultDarkTheme;function f(e,n,t,r,o){var a=i.default.fromColorOrString(t);e.set(p(n),a.stringify());for(var l=5;l<100;l+=5)a.A=.01*l,e.set(p(n,l),a.stringify());var u=i.default.bestContrast(a,r,o);for(e.set(h(n),u.stringify()),l=5;l<100;l+=5){var c=u.copy();c.A=.01*l*u.A,e.set(h(n,l),c.stringify())}}var A={"accent-dark":"-accent-dark","accent-light":"-accent-light","primary-dark":"-primary-dark","primary-light":"-primary-light",accent:"-accent",black:"-black",error:"-error",frame:"-frame",input:"-input",primary:"-primary",screen:"-screen",section:"-section",white:"-white",link:"-link"};function p(e,n){void 0===n&&(n=0);var t=A[e];return"".concat(l).concat(u).concat(t).concat(n>0?"".concat(c).concat(n):"")}function h(e,n){void 0===n&&(n=0);var t=A[e];return"".concat(l).concat(u).concat("-on").concat(t).concat(n>0?"".concat(c).concat(n):"")}},1854:(e,n,t)=>{function r(e){return"inherit"!==e&&!e.startsWith("#")&&!e.startsWith("rgb(")}Object.defineProperty(n,"__esModule",{value:!0}),n.getSizeStyle=n.getColorStyle=n.isThemeColor=void 0,t(3073),n.isThemeColor=r,n.getColorStyle=function(e){if(e&&"inherit"!==e)return r(e)?{color:"var(--theme-color-".concat(e,")")}:{color:e}},n.getSizeStyle=function(e,n){if(void 0===n&&(n=100),e)switch(e){case"small":return{fontSize:"".concat(.8*n,"%")};case"large":return{fontSize:"".concat(1.2*n,"%")};default:return{fontSize:"100%"}}}},1211:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var l=i(t(7294)),u=a(t(5630)),c=a(t(3665)),s=a(t(7269));function d(e){var n=e.className,t=e.enabled,r=e.reversed,o=e.outline,i=e.wide,a=e.flat,l=e.icon,u=["custom","ui-view-ButtonView"];return"string"==typeof n&&u.push(n),!1===t&&u.push("disabled"),!0===i&&u.push("wide"),!0===a&&u.push("flat"),!0===o&&u.push("outline"),l&&u.push("with-icon"),!0===r&&u.push("flip"),u.join(" ")}t(9898),n.default=function(e){var n,t,r=e.label,o=e.icon,i=e.error,a=e.tag,f=e.onClick,A=function(){"function"==typeof f&&f(a)};return!1===e.visible?null:r?!0===e.flat?l.createElement("div",{className:d(e)},i&&l.createElement(c.default,{className:"error",error:!0,value:i}),l.createElement("button",{title:e.title,onClick:A,style:{background:"transparent",color:"var(--theme-color-".concat(null!==(n=e.color)&&void 0!==n?n:"primary",")")}},o&&o(),l.createElement("div",{className:"label"},r))):l.createElement("div",{className:d(e)},i&&l.createElement(c.default,{className:"error",error:!0,value:i}),l.createElement("button",{title:e.title,className:"theme-color-".concat(null!==(t=e.color)&&void 0!==t?t:"primary"),onClick:A},o&&o(),l.createElement("div",{className:"label"},r))):l.createElement(u.default,{enabled:e.enabled,title:e.title,tag:a,icon:null!=o?o:s.default,className:d(e),onClick:A,color:e.color})}},7583:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(1211);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},3444:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var l=i(t(7294)),u=a(t(7583)),c=t(4870);function s(e){var n=["custom","ui-view-DialogView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(165),n.default=function(e){var n,t,r=(0,c.useTranslate)(),o=e.colorOK,i=e.flat,a=e.title,d=e.icon,f=e.valid,A=e.children,p=e.hideCancel,h=e.hideOK,m=e.labelOK,v=e.labelCancel,g=e.onOK,b=e.onCancel;return l.createElement("div",{className:s(e),style:{maxWidth:null!==(n=e.maxWidth)&&void 0!==n?n:"100vw",width:null!==(t=e.width)&&void 0!==t?t:"auto"}},a&&l.createElement("header",null,d&&d(),l.createElement("div",null,a)),l.createElement("div",null,function(e){return e instanceof Error?e.message:e}(A)),(!h||!p)&&l.createElement("footer",null,!(null!=p&&p)&&l.createElement(u.default,{label:null!=v?v:r.cancel,onClick:b,flat:!0}),!(null!=h&&h)&&l.createElement(u.default,{color:null!=o?o:"primary",enabled:null==f||f,label:null!=m?m:r.ok,onClick:g,flat:p&&i})))}},1874:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(3444);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},1351:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var a=i(t(7294));function l(e){var n=["custom","ui-view-FlexView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(6958),n.default=function(e){var n;return a.createElement("div",{className:l(e),style:{flexDirection:e.dir,justifyContent:e.justifyContent,alignItems:e.alignItems,flexWrap:e.wrap,gap:null!==(n=e.gap)&&void 0!==n?n:"1rem"}},e.children)}},2493:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(1351);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},1626:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var a=i(t(7294)),l=t(1854);function u(e){var n=e.className,t=e.enabled,r=e.color,o=["custom","ui-view-FloatingButtonView"];return"string"==typeof n&&o.push(n),!1===t&&o.push("disabled"),o.push("theme-color-".concat(null!=r?r:"primary")),o.join(" ")}t(8892),n.default=function(e){return a.createElement("button",{className:u(e),style:(0,l.getSizeStyle)(e.size),onClick:function(){var n=e.onClick,t=e.tag;n&&n(t)},title:e.title},e.icon({type:e.type}))}},5630:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(1626);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},5055:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0});var r=(0,t(1078).makeIconView)("M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z","AddIcon");n.default=r},4515:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0});var r=(0,t(1078).makeIconView)("M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z","CancelIcon");n.default=r},9595:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0});var r=(0,t(1078).makeIconView)("M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19M8.46,11.88L9.87,10.47L12,12.59L14.12,10.47L15.53,11.88L13.41,14L15.53,16.12L14.12,17.53L12,15.41L9.88,17.53L8.47,16.12L10.59,14L8.46,11.88M15.5,4L14.5,3H9.5L8.5,4H5V6H19V4H15.5Z","DeleteIcon");n.default=r},4408:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0});var r=(0,t(1078).makeIconView)("M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z","EditIcon");n.default=r},5704:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0});var r=(0,t(1078).makeIconView)("M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z","ExportIcon");n.default=r},7470:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var a=i(t(7294)),l=t(1854);function u(e){var n=["custom","view","ui-view-icons-GenericIcon"];return"string"==typeof e.className&&n.push(e.className),!0===e.animate&&n.push("animate"),e.onClick&&n.push("clickable"),n.join(" ")}t(2477),n.default=function(e){var n,t=e.value,r=null!==(n=e.type)&&void 0!==n?n:"filled";return a.createElement("svg",{className:u(e),style:(0,l.getColorStyle)(e.color),viewBox:"0 0 24 24",preserveAspectRatio:"meet xMidYMid",onClick:e.onClick,tabIndex:e.onClick?1:void 0,strokeWidth:1.5},"filled"===r&&a.createElement("path",{d:t,fill:"currentColor",stroke:"none"}),"outlined"===r&&a.createElement("path",{d:t,fill:"none",stroke:"currentColor"}),"bold"===r&&a.createElement("path",{d:t,fill:"currentColor",stroke:"currentColor"}),"dual"===r&&a.createElement(a.Fragment,null,a.createElement("path",{d:t,opacity:.25,fill:"currentColor",stroke:"none"}),a.createElement("path",{d:t,fill:"none",stroke:"currentColor"})))}},7269:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0});var r=(0,t(1078).makeIconView)("M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z","OkIcon");n.default=r},6555:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0});var r=(0,t(1078).makeIconView)("M19,8L15,12H18A6,6 0 0,1 12,18C11,18 10.03,17.75 9.2,17.3L7.74,18.76C8.97,19.54 10.43,20 12,20A8,8 0 0,0 20,12H23M6,12A6,6 0 0,1 12,6C13,6 13.97,6.25 14.8,6.7L16.26,5.24C15.03,4.46 13.57,4 12,4A8,8 0 0,0 4,12H1L5,16L9,12","RefreshIcon");n.default=r},1779:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(700);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},700:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var l=i(t(7294)),u=a(t(4338));t(8291),n.default=function(e){var n=e.value,t=e.label,r=e.size,o=e.enabled,i=e.wide,a=e.width,d=e.onChange,f=e.onEnterPressed;return l.createElement(u.default,{className:s(e),value:"".concat(n),label:t,size:r,enabled:o,wide:i,width:a,validator:function(n){if(c.lastIndex=-1,!c.test(n))return!1;var t=parseFloat(n);return!("number"==typeof e.min&&t<e.min||"number"==typeof e.max&&t>e.max)},onChange:function(e){return d&&d(parseFloat(e))},onEnterPressed:function(e){return f&&f(parseFloat(e))}})};var c=/^[+-]?[0-9]+$/gi;function s(e){var n=["custom","ui-view-input-IntegerView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}},4338:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(3080);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},3080:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),t(4342);var u=i(t(7294)),c=t(3724),s=l(t(7857)),d=l(t(3665)),f="ui-view-input-TextView",A=1;function p(e,n){var t=["custom",f];return"string"==typeof e.className&&t.push(e.className),!0===e.wide&&t.push("wide"),!1===n&&t.push("invalid"),t.join(" ")}function h(e,n){if(!n)return!0;if("function"==typeof n)try{return n(e)}catch(e){return!1}return n.lastIndex=-1,n.test(e)}n.default=function(e){var n=e.name,t=e.value,r=e.label,o=e.error,i=e.size,l=e.type,m=e.focus,v=e.width,g=e.enabled,b=e.placeholder,y=e.validator,w=e.suggestions,C=e.backgroundColor,I=e.onChange,B=e.onValidation,_=e.onEnterPressed,x=u.useRef(null),O=a(u.useState(""),2),k=O[0],P=O[1],j=a(u.useState(t),2),E=j[0],S=j[1],M=a(u.useState(h(t)),2),D=M[0],V=M[1];u.useEffect((function(){return P("".concat(f,"-").concat(A++))}),[]),u.useEffect((function(){return function(){x.current&&(m?window.setTimeout((function(){var e;return null===(e=x.current)||void 0===e?void 0:e.focus()})):window.setTimeout((function(){var e;return null===(e=x.current)||void 0===e?void 0:e.blur()})))}}),[m,x.current]),u.useEffect((function(){S(t)}),[t]);var T="".concat(k,":datalist"),N={};if((0,c.isString)(v)&&(N.width=v),(0,c.isString)(C)){var L=new s.default(C),Z=s.default.bestContrast(L,"#000","#fff");N.backgroundColor=L.stringify(),N.color=Z,N.fontWeight="bolder"}return u.createElement("div",{className:p(e,D)},u.createElement(d.default,{value:null!=o?o:r,target:k,error:!!o}),w&&u.createElement("datalist",{id:T},w.map((function(e){return u.createElement("option",{key:e,value:e})}))),u.createElement("input",{id:k,ref:x,name:n,size:i,list:T,value:E,type:l,style:N,placeholder:b,disabled:!1===g||void 0,onChange:function(e){var n=e.target.value,t=h(n,y);B&&B(t),V(t),S(n),t&&"function"==typeof I&&I(n)},onKeyDownCapture:function(e){D&&"function"==typeof _&&"Enter"===e.key&&_(E)}}),u.createElement(d.default,{className:"hide",value:r,target:k}))}},3665:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(5323);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},5323:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var a=i(t(7294));function l(e){var n=["custom","ui-view-LabelView"];return"string"==typeof e.className&&n.push(e.className),!0===e.error&&n.push("error"),!1===e.visible&&n.push("hide"),n.join(" ")}t(6825),n.default=function(e){var n=e.value,t=e.target;return void 0===n?null:a.createElement("label",{htmlFor:t,className:l(e)},n)}},2944:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(2283);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},2283:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var u=i(t(7294)),c=l(t(3665)),s=l(t(1327)),d=t(2859);function f(e){var n=["custom","view","ui-view-OptionsView"];return"string"==typeof e.className&&n.push(e.className),!0===e.wide&&n.push("wide"),n.join(" ")}t(3257),n.default=function(e){var n=e.label,t=e.options,r=a((0,d.useChangeableValue)(e),2),o=r[0],i=r[1];return u.createElement("div",{className:f(e)},u.createElement(c.default,{value:n}),u.createElement("div",{className:"options theme-shadow-button"},Object.keys(t).map((function(e){return e===o?u.createElement("div",{className:"button selected theme-color-accent-light",key:e},t[e]):u.createElement(s.default,{className:"button not-selected theme-color-primary",key:e,onClick:function(){return i(e)}},t[e])}))))}},7665:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(3993);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},3993:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var a=i(t(7294));function l(e){var n=["custom","ui-view-RunnableView"];return"string"==typeof e.className&&n.push(e.className),e.running&&n.push("running"),n.join(" ")}t(8054),n.default=function(e){return a.createElement("div",{className:l(e)},a.createElement("div",{className:"children"},e.children),a.createElement("div",{className:"overlay"},a.createElement("svg",{viewBox:"0 0 24 24"},a.createElement("path",{fill:"currentColor",d:"M7,6H5V4H7V6M17,6H19V4H17V6M23,12V18H21V14H19V18H17V16H7V18H5V14H3V18H1V12H3V10H5V8H7V6H9V8H15V6H17V8H19V10H21V12H23M15,10V12H17V10H15M7,12H9V10H7V12M11,18H7V20H11V18M17,18H13V20H17V18Z"}))))}},1327:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(5428);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},5428:function(e,n,t){var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var o in n=arguments[t])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e},r.apply(this,arguments)},o=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&o(n,e,t);return i(n,e),n},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var u=a(t(7294)),c=l(t(7857));function s(e){var n=["custom","ui-view-TouchableView"];return"string"==typeof e.className&&n.push(e.className),!1===e.enabled&&n.push("disabled"),n.join(" ")}t(5626),n.default=function(e){var n=r({},e.style);return e.backgroundColor&&(n.backgroundColor=e.backgroundColor,n.color=c.default.bestContrast(e.backgroundColor,"#000","#fff")),u.createElement("button",{className:s(e),onClick:function(){return e.onClick(e.tag)},title:e.title,style:n},e.children)}},4740:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var u=i(t(7294)),c=l(t(460)),s=l(t(5660)),d=t(2876);function f(e){var n=["custom","view-CodeEditorView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(117),n.default=function(e){var n=a(u.useState(e.value),2),t=n[0],r=n[1];return u.useEffect((function(){return r(e.value)}),[e.value]),u.createElement("div",{className:f(e)},u.createElement(c.default,{value:t,onValueChange:function(n){r(n),e.onChange(n)},highlight:function(n){return s.default.highlight(n,(0,d.getGrammarForLanguage)(e.language),e.language)}}))}},9860:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(4740);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},3293:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(1622);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},1622:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var l=i(t(7294)),u=a(t(1327));function c(e){var n=["custom","view-program-ButtonProgram","theme-shadow-button","theme-color-primary",e.type];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(8037),n.default=function(e){return l.createElement(u.default,{className:c(e),onClick:function(){return e.onClick(e.value)},title:e.value.name},l.createElement("div",{className:"name"},e.value.name),l.createElement("div",{className:"id"},e.value.id))}},7003:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(4512);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},4512:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{u(r.next(e))}catch(e){i(e)}}function l(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}u((r=r.apply(e,n||[])).next())}))},l=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var c=i(t(7294)),s=u(t(7583)),d=u(t(5055)),f=u(t(5669)),A=t(9839),p=t(751);function h(e){var n=["custom","view-page-MainPage"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(1411),n.default=function(e){var n=this;return c.createElement("div",{className:h(e)},c.createElement("header",null,c.createElement("svg",{viewBox:"0 0 24 24",height:"2rem"},c.createElement("path",{fill:"currentColor",d:"M7,6H5V4H7V6M17,6H19V4H17V6M23,12V18H21V14H19V18H17V16H7V18H5V14H3V18H1V12H3V10H5V8H7V6H9V8H15V6H17V8H19V10H21V12H23M15,10V12H17V10H15M7,12H9V10H7V12M11,18H7V20H11V18M17,18H13V20H17V18Z"})),c.createElement("div",null,"ToloGameDev"),c.createElement("div",{className:"version"},"v0.2.0")),c.createElement("main",null,c.createElement("fieldset",null,c.createElement("legend",null,c.createElement(s.default,{icon:d.default,label:"Painters",color:"accent",flat:!1,onClick:function(){return a(n,void 0,void 0,(function(){var n,t,r;return l(this,(function(o){switch(o.label){case 0:return n=(0,A.getDataService)(),(t=(0,p.makeTGDPainter)()).name="Painter ".concat(Date.now()),[4,n.painter.add(t)];case 1:return r=o.sent(),e.onPainterEdit({id:r,name:t.name}),[2]}}))}))}})),c.createElement(f.default,{onClick:e.onPainterEdit}))))}},8851:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var a=i(t(7294));n.default=function(e){return a.createElement(a.Fragment,null,e.children.find((function(n){return n.key===e.page})))}},5285:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var u=i(t(7294)),c=l(t(7583));function s(e){var n=["custom","view-page-painter-AttributeDataEditorView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(9096),n.default=function(e){var n=a(u.useState(null),2),t=n[0],r=n[1],o=a(u.useState(function(e,n){for(var t=[],r=0;r<e.length;r++){r>0&&(t.push(", "),r%n==0&&t.push("\n"));var o=e[r];t.push("".concat(o).padStart(12," "))}return t.join("")}(e.value,e.attribute.dim)),2),i=o[0],l=o[1];u.useEffect((function(){return r(null)}),[i]);var d=e.attribute;return u.createElement("div",{className:s(e)},u.createElement("div",{className:"dialog theme-color-frame"},u.createElement("header",{className:"theme-color-primary-dark"},u.createElement("div",{className:"name"},d.name),u.createElement("div",null,"dimension = ",d.dim),u.createElement("div",null,"array size = ",d.size)),u.createElement("main",null,u.createElement("textarea",{className:"theme-color-input",autoFocus:!0,value:i,onChange:function(e){return l(e.target.value)}})),u.createElement("footer",{className:"theme-color-section"},u.createElement(c.default,{label:"Cancel",flat:!0,onClick:e.onClose}),t&&u.createElement("div",{className:"theme-color-error"},t),u.createElement(c.default,{label:"Validate",onClick:function(){try{var n=JSON.parse("[".concat(i,"]")),t=d.dim*d.size;n.length%t!=0?r("".concat(n.length," is no multiple of ").concat(t,"!")):e.onChange(n)}catch(e){r("Invalid syntax!")}},enabled:!t}))))}},9551:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(5285);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},8290:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(5912);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},8155:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(7e3);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},7e3:function(e,n,t){var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var o in n=arguments[t])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e},r.apply(this,arguments)},o=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&o(n,e,t);return i(n,e),n},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var u=a(t(7294)),c=l(t(4408)),s=l(t(1779)),d=l(t(1327));t(378),n.default=function(e){var n=e.value;return u.createElement(u.Fragment,null,u.createElement("div",{className:"view-page-painter-PainterAttributeView name"},n.name,n.size>1?"[".concat(n.size,"]"):""),u.createElement(s.default,{size:2,value:n.divisor,onChange:function(n){return t={divisor:n},void e.onChange(r(r({},e.value),t));var t}}),u.createElement(d.default,{className:"view-page-painter-PainterAttributeView data",onClick:function(){return e.onClick(e.value)}},u.createElement("div",{className:"data-view"},e.data.map((function(e){return"".concat(e)})).join(", ")),u.createElement(c.default,null)))}},5912:function(e,n,t){var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var o in n=arguments[t])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e},r.apply(this,arguments)},o=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&o(n,e,t);return i(n,e),n},l=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{u(r.next(e))}catch(e){i(e)}}function l(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}u((r=r.apply(e,n||[])).next())}))},u=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},c=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var d=a(t(7294)),f=s(t(9551)),A=s(t(7583)),p=s(t(9860)),h=s(t(9114)),m=s(t(2493)),v=s(t(4515)),g=s(t(9595)),b=s(t(5704)),y=s(t(1779)),w=s(t(4338)),C=s(t(3665)),I=s(t(9935)),B=s(t(2944)),_=s(t(8155)),x=s(t(9214)),O=s(t(7665)),k=t(9839),P=t(751);function j(e){var n=["custom","view-page-PainterPage"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(5584),n.default=function(e){var n,t,o,i,a=this,s=d.useRef(new x.default),E=c(d.useState(null),2),S=E[0],M=E[1],D=c(d.useState("vert"),2),V=D[0],T=D[1],N=c(d.useState(null),2),L=N[0],Z=N[1],z=c(d.useState(!0),2),R=z[0],G=z[1],H=c(d.useState((0,P.makeTGDPainter)()),2),U=H[0],Y=H[1],F=(0,h.default)((function(e){Z(s.current.compile(e)),Y(r({},e))}),500),W=function(e){var n=r(r({},U),e);Y(n),F(n)},q=function(e){Y(r(r({},U),{preview:{data:r(r({},U.preview.data),e)}}))};d.useEffect((function(){-1!==e.id?(G(!0),(0,k.getDataService)().painter.get(e.id).then((function(e){G(!1),e&&Y(e)})).catch((function(n){return console.error("Unable to get painter #".concat(e.id,"!"),n)}))):G(!1)}),[e.id]);var $=U.attributes.find((function(e){return e.name===S}));return d.createElement(O.default,{running:R},d.createElement("div",{className:j(e)},d.createElement("header",null,d.createElement(m.default,null,d.createElement(A.default,{color:"accent",label:"Save",enabled:null===L,icon:b.default,onClick:function(){return l(a,void 0,void 0,(function(){var n;return u(this,(function(t){switch(t.label){case 0:return n=(0,k.getDataService)(),[4,I.default.wait("Saving...",n.painter.update(U))];case 1:return t.sent(),e.onClose(),[2]}}))}))}}),d.createElement(A.default,{flat:!0,label:"Cancel",icon:v.default,onClick:function(){return l(a,void 0,void 0,(function(){return u(this,(function(n){switch(n.label){case 0:return[4,I.default.confirm("You are about to revert all the changes you made for these shaders")];case 1:return n.sent()&&e.onClose(),[2]}}))}))}})),d.createElement(w.default,{label:"Shaders name (#".concat(U.id,")"),value:U.name,onChange:function(e){return U.name=e}}),d.createElement(A.default,{color:"accent",label:"Delete",icon:g.default})),d.createElement("main",null,d.createElement("div",null,d.createElement("h1",null,"Preview"),d.createElement("canvas",{className:"theme-shadow-header"}),d.createElement("h1",null,"Data"),d.createElement(m.default,{wrap:"wrap"},d.createElement(y.default,{label:"Instances",size:4,value:null!==(n=U.preview.data.instanceCount)&&void 0!==n?n:0,onChange:function(e){return q({instanceCount:e})}}),d.createElement(y.default,{label:"Vertices",size:4,value:null!==(t=U.preview.data.vertexCount)&&void 0!==t?t:0,onChange:function(e){return q({vertexCount:e})}}),d.createElement(y.default,{label:"Elements",size:4,value:null!==(o=U.preview.data.elementCount)&&void 0!==o?o:0,onChange:function(e){return q({elementCount:e})}})),d.createElement("div",{className:"attributes"},d.createElement(C.default,{value:"Attribute"}),d.createElement(C.default,{value:"Divisor"}),d.createElement(C.default,{value:"Data (click to edit)"}),U.attributes.map((function(e){var n;return d.createElement(_.default,{key:e.name,value:e,data:null!==(n=U.preview.data.attributes[e.name])&&void 0!==n?n:[],onChange:function(){},onClick:function(e){return M(e.name)}})})))),d.createElement("div",null,d.createElement(B.default,{wide:!0,options:{vert:"Vertex Shader",frag:"Fragment Shader"},value:V,onChange:T}),d.createElement("br",null),"vert"===V&&d.createElement(p.default,{language:"glsl",value:U.vertexShader,onChange:function(e){return W({vertexShader:e})}}),"frag"===V&&d.createElement(p.default,{language:"glsl",value:U.fragmentShader,onChange:function(e){return W({fragmentShader:e})}}),L&&d.createElement("pre",{className:"theme-color-error error"},L)),L&&d.createElement("pre",{className:"theme-color-error"},L)),$&&d.createElement(f.default,{attribute:$,value:null!==(i=U.preview.data.attributes[$.name])&&void 0!==i?i:[],onClose:function(){return M(null)},onChange:function(e){if(M(null),$){var n=r({},U);n.preview.data.attributes[$.name]=e,Y(n)}}})))}},5669:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(6774);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},6774:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var l=i(t(7294)),u=a(t(3293)),c=a(t(7665)),s=t(1292);function d(e){var n=["custom","view-program-LisShaders"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(3888),n.default=function(e){var n=(0,s.usePaintersList)();return l.createElement(c.default,{className:d(e),running:!n},n&&n.map((function(n){return l.createElement(u.default,{key:n.id,type:"painter",value:n,onClick:e.onClick})})),Array.isArray(n)&&0===n.length&&l.createElement("p",null,"No Painter has been created yet.",l.createElement("br",null),"Use the above button to add a new one."))}},4106:e=>{e.exports="#version 300 es\n\nprecision mediump float;\n\nin vec3 varColor;\nout vec4 FragColor;\n\nvoid main() {\n    FragColor = vec4(varColor, 1.0);\n}\n\n/**\n * in vec4 gl_FragCoord\n * in bool gl_FrontFacing\n * in vec2 gl_PointCoord\n */\n"},9223:e=>{e.exports="#version 300 es\n\nuniform float uniTime;\nin vec2 attPoint;\nin vec3 attColor;\nout vec3 varColor;\n\nvoid main() {\n    float strength = 0.5 + 0.5 * cos(uniTime * 0.001);\n    varColor = attColor * strength;\n    gl_Position = vec4(attPoint, 0.0, 0.0);\n}\n\n/**\n * out vec4 gl_Position\n * out float gl_PointSize\n * out float gl_ClipDistance[] \n * in int gl_VertexID\n * in int gl_InstanceID\n */\n "},7345:(e,n,t)=>{e.exports=t.p+"./img/mountains.78e037decb39cefedc66.webp"},3884:e=>{e.exports=JSON.parse('{"fallback":"en","languages":["en","fr","it"]}')},3191:e=>{e.exports=JSON.parse('{"anonymous-trace":"Anonymous trace","bad-login":"Unknown user or wrong password!","cancel":"Cancel","change-password":"Change your password","close":"Close","create-account":"Create an account","day-1":"Monday","day-2":"Tuesday","day-3":"Wednesday","day-4":"Thursday","day-5":"Friday","day-6":"Saturday","day-7":"Sunday","email-address":"EMail address","email-sent":"An e-mail has been sent to the following address. Please also check your spams.","email-usage-disclaimer":"We only use your email to send you back your password if forgotten. We do not share this email with anybody.","error-contact-support":"An unexpected error occured! Please contact support:","error-gps-permission-denied":"Please allow Geolocalisation to use this feature.","error-nickname-exists":"This nickname is already used by someone else!","error-unknown":"Technical error! Please contact us.","error-wrong-password":"Current password is wrong!","file":"File","forgot-password":"Password forgotten","got-it":"Got it","invalid-email":"Invalid email!","language":"Language","lat":"Latitude","level":"Level","level-0":"Unknown","level-1":"Very easy","level-2":"Easy","level-3":"Hard","level-4":"Very hard","level-5":"Technical","level-6":"Very Technical","lng":"Longitude","location":"Location","login":"Login","logout":"Logout","map-filter":"Select a map filter","map-layer":"Select the map layer","missing-email":"Please enter a valid email address and we will send you vour credentials by email.","month-1":"Jan","month-10":"Oct","month-11":"Nov","month-12":"Dec","month-2":"Feb","month-3":"Mar","month-4":"Apr","month-5":"May","month-6":"Jun","month-7":"Jul","month-8":"Aug","month-9":"Sep","new-password":"New password","new-password-repeat":"New password (again)","nickname":"Nickname","no-match":"New passwords do not match!","ok":"Ok","old-password":"Current password","only-my-traces":"Only my own traces","password":"Password","password-too-short":"The password must be at least 6 chars long!","personal-space":"Go to Personal Space","place":"Place","remove":"Remove","rgpd":"# Cookies\\n\\nTrail-Passion is very concerned by your privacy.  \\nThat\'s why we **do not use** any kind of **commercial cookie**.\\n\\nThe data we store on the client browser are for user preferences and network optimization only.  \\nWe do not use any suspicious third party (like Google services, ads providers, ...).","save":"Save","see-more":"See more...","select-language":"Select your language","sport":"Activity","sport-0":"Trail","sport-1":"Running","sport-10":"Nordic\'s walk","sport-11":"Audioguide","sport-12":"Snowshoes","sport-2":"Trekking","sport-3":"Cycling","sport-4":"Mountain Bike","sport-5":"Alpine skiing","sport-6":"Cross-country skiing","sport-7":"All-terrain vehicle","sport-8":"Canoe","sport-9":"Horse riding","time-barrier":"Time barrier:","trace-group":"Trace Group","trace-id":"Trace ID","trace-name":"Trace Name","unknown":"Unknown","user-is-not-granted":"This user has not enough priviledges!"}')},320:e=>{e.exports=JSON.parse('{"anonymous-trace":"Trace anonyme","bad-login":"Utilisateur inconnu ou mot de passe erroné !","cancel":"Annuler","change-password":"Changer de mot de passe","close":"Fermer","create-account":"Créer un compte","day-1":"Lundi","day-2":"Mardi","day-3":"Mercredi","day-4":"Jeudi","day-5":"Vendredi","day-6":"Samedi","day-7":"Dimanche","email-address":"Adresse mail","email-usage-disclaimer":"Votre adresse mail nous permet de vous renvoyer votre mot de passe si vous l\'oubliez. Nous ne dévoilons cette adresse à personne d\'autre.","error-contact-support":"Une erreur inattendue est apparue ! Veuillez contacter le support :","error-gps-permission-denied":"La géolocalisation est actuellement désactivée.","error-nickname-exists":"Ce pseudo est déjà utilisé par un autre utilisateur !","error-unknown":"Erreur technique ! Veuillez nous contacter.","error-wrong-password":"Votre mot de passe est erroné !","file":"Fichier","forgot-password":"Mot de passe oublié","got-it":"J\'ai compris","invalid-email":"Adresse mail invalide !","language":"Langue","lat":"Latitude","level":"Niveau","level-0":"Inconnu","level-1":"Très facile","level-2":"Facile","level-3":"Difficile","level-4":"Très difficile","level-5":"Technique","level-6":"Très technique","lng":"Longitude","location":"Position","login":"Connexion","logout":"Déconnexion","map-filter":"Choisissez votre filtre","map-layer":"Choisissez votre type de carte","missing-email":"Veuillez entrer une adresse mail valide pour recevoir un lien de connexion.","month-1":"Jan","month-10":"Oct","month-11":"Nov","month-12":"Déc","month-2":"Fév","month-3":"Mar","month-4":"Avr","month-5":"Mai","month-6":"Jun","month-7":"Jul","month-8":"Aoû","month-9":"Sep","new-password":"Nouveau mot de passe","new-password-repeat":"Nouveau mot de passe (répéter)","nickname":"Pseudonyme","no-match":"Les nouveaux mots de passes sont différents !","ok":"Valider","old-password":"Mot de passe actuel","only-my-traces":"Seulement mes propres traces","password":"Mot de passe","password-too-short":"Le mot de passe doit avoir au moins 6 caractères !","personal-space":"Accéder à l\'espace personnel","place":"Lieu","remove":"Retirer","rgpd":"# Cookies\\n\\nTrail-Passion est très soucieux de votre vie privée. \\nC\'est pourquoi nous n\'utilisons **aucun type de cookie commercial**.\\n\\nLes données que nous stockons sur le navigateur client sont uniquement destinées aux préférences de l\'utilisateur et à l\'optimisation du réseau. \\nNous n\'utilisons aucun tiers suspect (comme les services Google, les fournisseurs d\'annonces, ...).","save":"Sauvegarder","see-more":"Voir plus...","select-language":"Choisissez votre langue","sport":"Activité","sport-0":"Trail","sport-1":"Course","sport-10":"Marche nordique","sport-11":"Audio guide","sport-12":"Raquettes à neige","sport-2":"Randonnée","sport-3":"Vélo de route","sport-4":"VTT","sport-5":"Ski alpin","sport-6":"Ski de fond","sport-7":"Véhicule tout terrain","sport-8":"Canoë","sport-9":"Équitation","time-barrier":"Barrière horaire :","trace-group":"Nom du groupe","trace-id":"ID de la trace","trace-name":"Nom de la trace","unknown":"Inconnu","user-is-not-granted":"Cet utilisateur n\'a pas suffisamment de privilèges pour accéder à cette page !"}')},7753:e=>{e.exports=JSON.parse('{"anonymous-trace":"Percorso anonimo","bad-login":"Utente sconosciuto o password sbagliato!","cancel":"Cancella","change-password":"Cambia password","close":"Chiudi","create-account":"Nuovo conto","day-1":"Lunedi","day-2":"Martedi","day-3":"Mercoledi","day-4":"Giovedi","day-5":"Venerdi","day-6":"Sabato","day-7":"Domenica","email-address":"Indirizzo EMail","email-sent":"Una mail è stata inviata al seguente indirizzo. Si prega di controllare anche gli spam.","email-usage-disclaimer":"L\'email serve soltanto a spedire il password se dimenticato. Non diamo questo email a nessuno.","error-contact-support":"Si è verificato un errore imprevisto! Si prega di contattare l\'assistenza:","error-gps-permission-denied":"La geolocalizzazione è attualmente disabilitata.","error-nickname-exists":"Questo nome e giá quello di un altro utente!","error-unknown":"Errore technico! Speditecci un email.","error-wrong-password":"Il password e sbagliato!","file":"File","forgot-password":"Password dimenticato","got-it":"Ho capito","invalid-email":"E-mail non valido!","language":"Lingua","lat":"Latitudine","level":"Livello","level-0":"Sconosciuto","level-1":"Molto facile","level-2":"Facile","level-3":"Difficile","level-4":"Molto difficile","level-5":"Tecnico","level-6":"Molto tecnico","lng":"Longitudine","location":"Posizione","login":"Connessione","logout":"Logout","map-filter":"Scegli un filtro per questa mappa","map-layer":"Scegli una mappa","missing-email":"Dammi un indirizzo email che ti spedisco un collegamento per la connessione.","month-1":"Gen","month-10":"Ott","month-11":"Nov","month-12":"Dic","month-2":"Feb","month-3":"Mar","month-4":"Apr","month-5":"Mag","month-6":"Giu","month-7":"Lug","month-8":"Ago","month-9":"Set","new-password":"Nuovo password","new-password-repeat":"Nuovo password (ripeti)","nickname":"Nome publico","no-match":"I nuovi passwords non sono uguali!","ok":"OK","old-password":"Password attuale","only-my-traces":"Soltanto i miei percorsi","password":"Password","password-too-short":"Il password richiede almeno 6 caratteri!","personal-space":"Va nel mio Spazio","place":"Posto","remove":"Toggliere","rgpd":"# Cookies\\n\\nTrail-Passion è molto preoccupato per la tua privacy. \\nEcco perché **non usiamo** nessun tipo di **cookie commerciale**.\\n\\nI dati che memorizziamo sul browser sono solo per le preferenze dell\'utente e l\'ottimizzazione della rete. \\nNon utilizziamo terze parti sospette (come servizi Google, fornitori di annunci, ...).","save":"Salvare","see-more":"Di piú...","select-language":"Scegli la tua lingua","sport":"Attivita","sport-0":"Trail","sport-1":"Corsa","sport-10":"Camminata nordica","sport-11":"Audio-guida","sport-12":"Scarpe da neve","sport-2":"Trekking","sport-3":"Ciclismo","sport-4":"Mountain Bike","sport-5":"Sci alpino","sport-6":"Sci di fondo","sport-7":"Veicolo per tutti i terreni","sport-8":"Canoa","sport-9":"Equitazione","time-barrier":"Orario massimo:","trace-group":"Nome del gruppo","trace-id":"ID del percorso","trace-name":"Nome del percorso","unknown":"Sconosciuto","user-is-not-granted":"Questo utente non ha abbastanza potere!"}')}},e=>{e.O(0,[977],(()=>(5796,e(e.s=5796)))),e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,